(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{1003:function(e,t,n){e.exports={placeholder:"Placeholder-module__placeholder___37I0I",inner:"Placeholder-module__inner___2DX7N","is-light":"Placeholder-module__is-light___3__YD","is-dark":"Placeholder-module__is-dark___9wQwQ"}},1051:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),r=function(e){var t=e.children;return a.default.createElement("div",{style:{height:"300px",width:"100%",position:"relative",border:"1px solid #000"}},t)};t.default=r},1080:function(e,t,n){e.exports={placeholder:"InfiniteListDocExampleCommon-module__placeholder___3oD89"}},1094:function(e){e.exports=JSON.parse('{"name":"terra-infinite-list","main":"lib/index.js","version":"3.18.0","description":"The infinite list component provides virtual dom management and data request callbacks to manage large data sets within a list.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","terra-infinite-list","InfiniteList","Infinite","List","Virtualization","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8","resize-observer-polyfill":"^1.4.1","terra-list":"^4.0.0","terra-visually-hidden-text":"^2.0.0"},"devDependencies":{"terra-doc-template":"^2.2.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","props-table":"props-table ./src/InfiniteList.jsx --out-dir ./docs/props-table","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},1986:function(e,t,n){"use strict";n.r(t),t.default="# Terra InfiniteList - Sections\n\nTo achieve sections within the InfiniteList the only supported implementation is directly consuming the static variant of the `SectionHeader` component. Expand/collapse functionality is not supported within the infinite list. \n\n## Map Section Structure\nSo in our first step a `SectionHeader` needs to be created for each associated section. We'll add it to the initialization of an array that will be expanded in the following steps.\n```jsx\n  const createSection = (sectionData) => {\n    const section = [\n      <SectionHeader\n        key={sectionData.key}\n        title={sectionData.title}\n      />,\n    ];\n    return section;\n  };\n```\nNext we'll create an array with the first item being our section header, and then loop through the associated child items for the section appending them to the initial array.\n```jsx\n  const createSection = (sectionData) => {\n    const section = [\n      <SectionHeader\n        key={sectionData.key}\n        title={sectionData.title}\n      />,\n    ];\n    sectionData.childItems.forEach(childItem => section.push(createListItem(childItem)));\n    return section;\n  };\n```\n## Unpack Data\nWe can then implement the unpack of our data into our list items.\n```jsx\nconst createListItem = itemData => (\n  <Item key={itemData.key}>\n    <Placeholder title={itemData.title} />\n  </Item>\n);\n\nconst createSections = data => data.map(section => createSection(section));\n```\nThen we can implement a method to loop through our data and create the section with our methods and call it from our render method.\n```jsx\nconst InfiniteListSection = () => (\n  <MyExampleContainer>\n    <InfiniteList\n      dividerStyle=\"standard\"\n      isFinishedLoading\n    >\n      {createSections(mockData)}\n    </InfiniteList>\n  </MyExampleContainer>\n);\n```\n\nUsing these steps we get the following example:\n"},1987:function(e,t,n){"use strict";var i=n(19),a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=i(n(345)),l=a(n(982)),s=a(n(4)),c=a(n(1988)),u=a(n(1051)),d=a(n(1080)),m=s.default.bind(d.default),p=function(e){var t=[r.default.createElement(o.SectionHeader,{key:e.key,title:e.title})];return e.childItems.forEach((function(e){return t.push((n=e,r.default.createElement(o.Item,{key:n.key},r.default.createElement(l.default,{title:n.title,className:m("placeholder")}))));var n})),t},f=function(){return r.default.createElement(u.default,null,r.default.createElement(o.default,{dividerStyle:"standard",isFinishedLoading:!0},c.default.map((function(e){return p(e)}))))};t.default=f},1988:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=[{title:"Section 0",key:"unique-key-0",childItems:[{title:"Item 0-0",key:"unique-0-0"},{title:"Item 0-1",key:"unique-0-1"},{title:"Item 0-2",key:"unique-0-2"},{title:"Item 0-3",key:"unique-0-3"},{title:"Item 0-4",key:"unique-0-4"},{title:"Item 0-5",key:"unique-0-5"}]},{title:"Section 1",key:"unique-key-1",childItems:[{title:"Item 1-0",key:"unique-1-0"},{title:"Item 1-1",key:"unique-1-1"},{title:"Item 1-2",key:"unique-1-2"},{title:"Item 1-3",key:"unique-1-3"},{title:"Item 1-4",key:"unique-1-4"},{title:"Item 1-5",key:"unique-1-5"}]},{title:"Section 2",key:"unique-key-2",childItems:[{title:"Item 3-0",key:"unique-3-0"},{title:"Item 3-1",key:"unique-3-1"},{title:"Item 3-2",key:"unique-3-2"},{title:"Item 3-3",key:"unique-3-3"},{title:"Item 3-4",key:"unique-3-4"},{title:"Item 3-5",key:"unique-3-5"}]},{title:"Section 4",key:"unique-key-4",childItems:[{title:"Item 4-0",key:"unique-4-0"},{title:"Item 4-1",key:"unique-4-1"},{title:"Item 4-2",key:"unique-4-2"},{title:"Item 4-3",key:"unique-4-3"},{title:"Item 4-4",key:"unique-4-4"},{title:"Item 4-5",key:"unique-4-5"}]}];t.default=i},1989:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport InfiniteList, { Item, SectionHeader } from 'terra-infinite-list/lib/index';\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\nimport classNames from 'classnames/bind';\n\nimport mockData from './mock-data/mock-section';\nimport MyExampleContainer from '../common/MyExampleContainer';\nimport styles from '../example/InfiniteListDocExampleCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst createListItem = itemData => (\n  <Item key={itemData.key}>\n    <Placeholder title={itemData.title} className={cx('placeholder')} />\n  </Item>\n);\n\nconst createSection = (sectionData) => {\n  const section = [\n    <SectionHeader\n      key={sectionData.key}\n      title={sectionData.title}\n    />,\n  ];\n  sectionData.childItems.forEach(childItem => section.push(createListItem(childItem)));\n  return section;\n};\n\nconst createSections = data => data.map(section => createSection(section));\n\nconst InfiniteListSection = () => (\n  <MyExampleContainer>\n    <InfiniteList\n      dividerStyle=\"standard\"\n      isFinishedLoading\n    >\n      {createSections(mockData)}\n    </InfiniteList>\n  </MyExampleContainer>\n);\n\nexport default InfiniteListSection;\n"},2295:function(e,t,n){"use strict";var i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=i(n(0)),r=i(n(961)),o=n(1094),l=i(n(1986)),s=i(n(1987)),c=i(n(1989)),u=function(){return a.default.createElement(r.default,{packageName:o.name,readme:l.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(o.name),examples:[{title:"Sections Header Infinite List",example:a.default.createElement(s.default,null),source:c.default}]})};t.default=u},962:function(e,t){},982:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=l(n(0)),a=l(n(2)),r=l(n(4)),o=l(n(1003));function l(e){return e&&e.__esModule?e:{default:e}}function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.default.bind(o.default),d={variant:a.default.oneOf(["light","dark"]),title:a.default.string},m=function(e){var t=e.variant,n=e.title,a=c(e,["variant","title"]),r=u(["placeholder",a.className]),o=u(["inner","is-".concat(t)]);return i.default.createElement("div",s({},a,{className:r}),i.default.createElement("div",{className:o},i.default.createElement("h2",null,n)))};m.propTypes=d,m.defaultProps={variant:"dark",title:""};var p=m;t.default=p}}]);
//# sourceMappingURL=102-2123bbd4b415aaf3c039.js.map