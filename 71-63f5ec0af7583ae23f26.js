(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{1057:function(e,t,n){"use strict";var a=n(5),r=n(19);Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.disclosureType=void 0;var o,s=a(n(18)),l=a(n(32)),i=a(n(22)),c=a(n(23)),u=a(n(24)),d=a(n(25)),m=a(n(29)),f=a(n(26)),g=a(n(211)),p=a(n(0)),h=a(n(2)),v=a(n(81)),y=a(n(48)),S=r(n(212)),b=a(n(348)),I=a(n(974));t.disclosureType="panel";var E={children:h.default.node,panelBehavior:h.default.oneOf(["overlay","squish"]),disclosureAccessory:h.default.element},A=(o={},(0,g.default)(o,S.availableDisclosureSizes.TINY,"small"),(0,g.default)(o,S.availableDisclosureSizes.SMALL,"small"),(0,g.default)(o,S.availableDisclosureSizes.MEDIUM,"large"),(0,g.default)(o,S.availableDisclosureSizes.LARGE,"large"),(0,g.default)(o,S.availableDisclosureSizes.HUGE,"large"),o),M=function(e){function t(e){var n;return(0,i.default)(this,t),(n=(0,u.default)(this,(0,d.default)(t).call(this,e))).renderSlidePanel=n.renderSlidePanel.bind((0,m.default)(n)),n}return(0,f.default)(t,e),(0,c.default)(t,[{key:"renderSlidePanel",value:function(e){var t,n,a,r=this.props,o=(r.children,r.panelBehavior),i=r.disclosureAccessory,c=(0,l.default)(r,["children","panelBehavior","disclosureAccessory"]);(e.disclosure.size===S.availableDisclosureSizes.FULLSCREEN||e.disclosure.isMaximized)&&(t=!0),n=e.disclosure.dimensions?(a=e.disclosure.dimensions).width>480||a.height>600?"large":"small":A[e.disclosure.size];var u=e.disclosureComponentKeys[e.disclosureComponentKeys.length-1],d=(e.disclosureComponentData[u]||{}).headerAdapterData;return p.default.createElement(I.default,(0,s.default)({},c,{fill:!0,panelBehavior:o,isFullscreen:t,panelSize:n,isOpen:e.disclosure.isOpen,panelContent:p.default.createElement(y.default,{fill:!0,header:p.default.createElement(p.default.Fragment,null,d?p.default.createElement(v.default,{title:d.title,onClose:e.closeDisclosure,onBack:e.disclosureComponentKeys.length>1?e.dismissPresentedComponent:void 0,onMaximize:e.maximizeDisclosure,onMinimize:e.minimizeDisclosure},d.collapsibleMenuView):void 0,i)},p.default.createElement(b.default,{items:e.disclosure.components,isAnimated:!0})),mainContent:e.children.components}))}},{key:"render",value:function(){var e=this.props.children;return p.default.createElement(S.default,{supportedDisclosureTypes:["panel"],render:this.renderSlidePanel},e)}}]),t}(p.default.Component);M.propTypes=E,M.defaultProps={panelBehavior:"overlay"};var D=M;t.default=D},1078:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(211)),o=a(n(32)),s=a(n(22)),l=a(n(23)),i=a(n(24)),c=a(n(25)),u=a(n(29)),d=a(n(26)),m=a(n(0)),f=a(n(2));function g(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}var p={items:f.default.arrayOf(f.default.shape({key:f.default.string.isRequired,component:f.default.element.isRequired})),render:f.default.func,disclose:f.default.func},h=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,i.default)(this,(0,c.default)(t).call(this,e))).requestFocus=n.requestFocus.bind((0,u.default)(n)),n.releaseFocus=n.releaseFocus.bind((0,u.default)(n)),n.setFocusState=n.setFocusState.bind((0,u.default)(n)),n.resetFocusState=n.resetFocusState.bind((0,u.default)(n)),n.renderItems=n.renderItems.bind((0,u.default)(n)),n.state={focusedItemId:void 0,focusedItemState:void 0},n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"componentDidUpdate",value:function(e){var t,n=e.items,a=this.state.focusedItemId;this.props.items!==e.items&&(n.forEach((function(e){e.key===a&&(t=!0)})),t||this.releaseFocus(void 0,!0))}},{key:"setFocusState",value:function(e,t){this.setState({focusedItemId:e,focusedItemState:t})}},{key:"resetFocusState",value:function(){this.setFocusState()}},{key:"requestFocus",value:function(e,t){var n=this,a=this.props.disclose,s=this.state.focusedItemId;return new Promise((function(l,i){n.releaseFocus(s).then((function(){n.setFocusState(e,Object.freeze(t||{}));var s={};a&&(s.disclose=function(t){return n.state.focusedItemId!==e?Promise.reject():a(t).then((function(e){var t=e.afterDismiss,a=e.dismissDisclosure,s=(0,o.default)(e,["afterDismiss","dismissDisclosure"]);return n.forceDismissInstance=a,t.then((function(){n.forceDismissInstance=void 0,n.state.focusedItemId&&n.resetFocusState()})),function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(n,!0).forEach((function(t){(0,r.default)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({afterDismiss:t,dismissDisclosure:a},s)}))}),l(s)})).catch((function(){i()}))}))}},{key:"releaseFocus",value:function(e,t){var n=this;return this.state.focusedItemId?e===this.state.focusedItemId||t?new Promise((function(e,t){n.forceDismissInstance?n.forceDismissInstance().then((function(){n.resetFocusState(),e()})).catch((function(){t()})):(n.resetFocusState(),e())})):Promise.reject():Promise.resolve()}},{key:"renderItems",value:function(){var e=this,t=this.props.items,n=this.state,a=n.focusedItemId,r=n.focusedItemState;return t.map((function(t){var n=a===t.key;return m.default.cloneElement(t.component,{key:t.key,aggregatorDelegate:{hasFocus:n,requestFocus:function(n){return e.requestFocus(t.key,n)},releaseFocus:n?function(){return e.releaseFocus(t.key)}:void 0,itemState:n?r:void 0}})}))}},{key:"render",value:function(){var e=this.renderItems();return this.props.render?this.props.render({items:e}):m.default.createElement("div",null,e)}}]),t}(m.default.Component);h.propTypes=p,h.defaultProps={items:[]};var v=h;t.default=v},1125:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(18)),o=a(n(32)),s=a(n(22)),l=a(n(23)),i=a(n(24)),c=a(n(25)),u=a(n(29)),d=a(n(26)),m=a(n(0)),f=a(n(2)),g=a(n(54)),p=a(n(48)),h=a(n(221)),v=a(n(81)),y=n(212),S=a(n(4)),b=a(n(1318)),I=a(n(1319)),E=a(n(1677)),A=a(n(1678)),M=S.default.bind(E.default),D=(0,y.withDisclosureManager)((function(e){var t=e.disclosureManager;return m.default.createElement(p.default,{header:m.default.createElement(v.default,{title:"Info Modal",onClose:t.closeDisclosure,onBack:t.goBack})},m.default.createElement("div",{className:M("readonly-modal-content")},m.default.createElement("p",null,"This modal was not presented through the Aggregator. The Aggregator state was maintained.")))}));D.propTypes={disclosureManager:y.disclosureManagerShape};var w={aggregatorDelegate:f.default.object,name:f.default.string,disclosureType:f.default.string,discloseOnSelect:f.default.bool,customDisclose:f.default.func},k=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,i.default)(this,(0,c.default)(t).call(this,e))).handleSelection=n.handleSelection.bind((0,u.default)(n)),n.launchModal=n.launchModal.bind((0,u.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleSelection",value:function(e,t){var n=this,a=this.props,r=a.aggregatorDelegate,o=a.name,s=a.discloseOnSelect,l={0:"tiny",1:"small",2:"medium",3:"large",4:"huge",5:"fullscreen"};r.hasFocus&&r.itemState.selectedIndex===t?r.releaseFocus().catch((function(){console.log("Section - Focus release failed. Something must be locked.")})):r.requestFocus({selectedIndex:t}).then((function(e){var a=e.disclose;s&&a({preferredType:n.props.disclosureType,size:l[t],content:{key:"Nested ".concat(o),component:m.default.createElement(A.default,{name:"Nested ".concat(o),disclosureType:n.props.disclosureType})}})})).catch((function(e){console.log("Section - Selection denied - ".concat(e))}))}},{key:"launchModal",value:function(){(0,this.props.customDisclose)({preferredType:"modal",size:"small",content:{key:"ModalContent-".concat(Date.now()),component:m.default.createElement(D,null)}})}},{key:"render",value:function(){var e,t=this,n=this.props,a=n.name,s=(n.disclosureType,n.aggregatorDelegate),l=(n.discloseOnSelect,n.customDisclose),i=(0,o.default)(n,["name","disclosureType","aggregatorDelegate","discloseOnSelect","customDisclose"]);return s.hasFocus&&s.itemState&&void 0!==s.itemState.selectedIndex&&(e=s.itemState.selectedIndex),m.default.createElement(p.default,(0,r.default)({},i,{header:m.default.createElement(h.default,{className:M("header-arrange"),fitStart:m.default.createElement("div",{className:M("header-arrange-content")},l?m.default.createElement(g.default,{text:"Modal (Without Requesting Focus)",onClick:this.launchModal}):null),fill:m.default.createElement("div",null,a)})}),m.default.createElement(b.default,{isPadded:!0},m.default.createElement(I.default,{isSelected:0===e,onSelect:function(e){return t.handleSelection(e,0)}},m.default.createElement("div",null,"Row 0")),m.default.createElement(I.default,{isSelected:1===e,onSelect:function(e){return t.handleSelection(e,1)}},m.default.createElement("div",null,"Row 1")),m.default.createElement(I.default,{isSelected:2===e,onSelect:function(e){return t.handleSelection(e,2)}},m.default.createElement("div",null,"Row 2")),m.default.createElement(I.default,{isSelected:3===e,onSelect:function(e){return t.handleSelection(e,3)}},m.default.createElement("div",null,"Row 3")),m.default.createElement(I.default,{isSelected:4===e,onSelect:function(e){return t.handleSelection(e,4)}},m.default.createElement("div",null,"Row 4")),m.default.createElement(I.default,{isSelected:5===e,onSelect:function(e){return t.handleSelection(e,5)}},m.default.createElement("div",null,"Row 5"))))}}]),t}(m.default.Component);k.propTypes=w;var T=k;t.default=T},1126:function(e,t,n){},1318:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0));n(1126);var o=function(e){var t=e.children,n=e.isPadded;return r.default.createElement("ul",{role:"listbox",className:n?"placeholder-list is-padded":"placeholder-list "},t)};t.default=o},1319:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(18)),o=a(n(32)),s=a(n(0));n(1126);var l=function(e){var t=e.children,n=e.isSelected,a=e.onSelect,l=(0,o.default)(e,["children","isSelected","onSelect"]),i=n?"placeholder-list-item is-selected":"placeholder-list-item ";return s.default.createElement("li",(0,r.default)({},l,{"aria-selected":n,tabIndex:"0",className:i,onClick:a,onKeyDown:function(e){13!==e.nativeEvent.keyCode&&32!==e.nativeEvent.keyCode||(e.preventDefault(),a(e))},role:"option"}),t)};t.default=l},1454:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(18)),o=a(n(32)),s=a(n(0)),l=a(n(2)),i=a(n(48)),c=a(n(1688)),u={aggregatorDelegate:l.default.object,name:l.default.string},d=function(e){var t=e.name,n=e.aggregatorDelegate,a=(0,o.default)(e,["name","aggregatorDelegate"]);return s.default.createElement(i.default,(0,r.default)({},a,{header:s.default.createElement(c.default,{title:t})}),n.hasFocus?s.default.createElement("button",{type:"button",onClick:function(){n.releaseFocus()}},"Release Focus"):s.default.createElement("button",{type:"button",onClick:function(){n.requestFocus()}},"Get Focus"),n.hasFocus?s.default.createElement("h4",null,"Section has focus!"):null)};d.propTypes=u;var m=d;t.default=m},1673:function(e){e.exports=JSON.parse('{"name":"terra-aggregator","main":"lib/Aggregator.js","version":"4.28.0","description":"The Aggregator provides focus-based mechanisms for managing actions across disparate components.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","Framework","terra-aggregator","Aggregator","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5"},"dependencies":{"classnames":"^2.2.5","prop-types":"^15.5.8"},"devDependencies":{"terra-action-header":"^2.0.0","terra-arrange":"^3.0.0","terra-button":"^3.3.0","terra-content-container":"^3.0.0","terra-disclosure-manager":"^4.23.0","terra-doc-template":"^2.2.0","terra-form-input":"^2.3.0","terra-grid":"^6.0.0","terra-modal-manager":"^6.14.0","terra-section-header":"^2.0.0","terra-slide-panel-manager":"^5.13.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},1674:function(e,t,n){"use strict";n.r(t),t.default="# Terra Aggregator\n\nThe Aggregator provides focus-based mechanisms for managing actions across disparate components.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-aggregator`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Usage\n\n### Aggregator Focus\n\nThe Aggregator manages interactions across its items using focus. Only one item can have focus at any given time. When an item requests focus, it can provide an Object containing state pertaining to the focus request. This state will be managed by the Aggregator and given to the item as a prop on the next render cycle. What goes inside this Object is up to the item. However, this Object will be destroyed when the item loses focus, so the data included should be scoped to things tied directly to a focused state.\n\nOnce an item receives focus, the item will be provided with the 'disclose' function that the Aggregator was provided with. The Aggregator wraps that disclose function and ensures that the disclosure lifecycle is tied to the focus management. If the disclosure is closed, focus will be released from the disclosing component. If the disclosing component loses focus for whatever reason, the Aggregator will ensure that the disclosure is closed. Any DisclosureManager-based disclosure implementation is supported.\n\nThe components rendered by the Aggregator are provided with an `aggregatorDelegate` prop for interacting with Aggregator state.\n\n`aggregatorDelegate` API:\n\n|Key|Description|\n|---|---|\n|hasFocus|A Boolean indicating whether or not the item currently has focus.|\n|requestFocus|A function that will attempt to give focus to the calling item.|\n|releaseFocus|A function that will release focus from the calling item. This is only provided if the item currently has focus.|\n|itemState|An Object containing state that was given to the Aggregator during the focus request.|\n\n### Rendering\n\nBy default, the components will be rendered by the Aggregator in the order given. An optional `render` prop can be provided that will override the default render logic.\n\n`render` Argument Object API:\n\n|Key|Description|\n|---|---|\n|`items`|An Array of components that were provided to the Aggregator as `items`, now containing an `aggregatorDelegate` prop. The order of this array matches that of the `items` prop value of the Aggregator.|\n\n#### Rendering Example (using Grid)\n\n```jsx\n<Aggregator\n  items={[{ key: '1', component: <Item1 /> }, { key: '2', component: <Item2 /> }]}\n  render={renderData => (\n    <Grid>\n      <Grid.Row>\n        <Grid.Column col={6}>\n          {renderData.items[0]} // This component is equivalent to: <Item1 key=\"1\" aggregatorDelegate={...} />\n        </Grid.Column>\n        <Grid.Column col={6}>\n          {renderData.items[1]} // This component is equivalent to: <Item2 key=\"2\" aggregatorDelegate={...} />\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  )}\n/>\n```\n\n### Example\n\n```jsx\nimport React from 'react';\nimport Base from 'terra-base';\nimport Button from 'terra-button';\nimport Aggregator from '../../src/Aggregator';\nimport SlidePanelManager, { disclosureType } from 'terra-slide-panel-manager';\nimport { withDisclosureManager } from 'terra-disclosure-manager';\n\nconst DisclosureComponent = withDisclosureManager({ disclosureManager }) => (\n  <div>\n    <Button text=\"Dismiss\" onClick={() => { disclosureManager.dismiss(); }} />\n  </div>\n);\n\nconst Section = ({ aggregatorDelegate }) => (\n  <div>\n    {aggregatorDelegate.hasFocus ? <p>Section has focus</p> : null}\n    <Button\n      text={aggregatorDelegate.hasFocus ? 'Release Focus' : 'Request Focus'}\n      onClick={() => {\n        if (aggregatorDelegate.hasFocus) {\n          aggregatorDelegate.releaseFocus();\n        } else {\n          aggregatorDelegate.requestFocus({})\n            .then(({ disclose }) => {\n              disclose({\n                preferredType: disclosureType,\n                size: 'small',\n                content: {\n                  key: 'my-disclosure-component',\n                  component: <DisclosureComponent />,\n                },\n              });\n            });\n        }\n      }}\n    />\n  </div>\n);\n\nconst aggregatorItems = [{\n  key: 'Section 1',\n  component: <Section />,\n}, {\n  key: 'Section 2',\n  component: <Section />,\n}, {\n  key: 'Section 3',\n  component: <Section />,\n}];\n\nconst MyAggregator = withDisclosureManager(({ disclosureManager }) => (\n  <Aggregator\n    items={aggregatorItems}\n    disclose={disclosureManager.disclose}\n  />\n));\n\nconst MyApp = () => (\n  <Base>\n    <SlidePanelManager>\n      <MyAggregator />\n    </SlidePanelManager>\n  </Base>\n);\n\n```\n\n## Component Features\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n"},1675:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n  /**\n   * The components that will be managed by the Aggregator. Each component provided will be provided with an 'aggregatorDelegate' prop\n   * containing the Aggregator API. Keys must also be provided to allow the Aggregator to uniquely identify the component.\n   * Immutable objects are preferred.\n   */\n  items: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    component: PropTypes.element.isRequired,\n  })),\n  /**\n   * A function that will override the Aggregators default render. The function will receive an Object parameter data necessary for the\n   * render process.\n   */\n  render: PropTypes.func,\n  /**\n   * A function that will be provided to Aggregator items that have received focus. The function must adhere to the standardized\n   * DisclosureManager disclosure API.\n   */\n  disclose: PropTypes.func,\n};\n\nconst defaultProps = {\n  items: [],\n};\n\nclass Aggregator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.requestFocus = this.requestFocus.bind(this);\n    this.releaseFocus = this.releaseFocus.bind(this);\n    this.setFocusState = this.setFocusState.bind(this);\n    this.resetFocusState = this.resetFocusState.bind(this);\n    this.renderItems = this.renderItems.bind(this);\n\n    this.state = {\n      focusedItemId: undefined,\n      focusedItemState: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const { items } = prevProps;\n    const { focusedItemId } = this.state;\n\n    if (this.props.items !== prevProps.items) {\n      // If the currently focused item is not present in the new items set,\n      // the focus is forcefully released to clean up any presented disclosures.\n      let focusItemIsPresent;\n      items.forEach((item) => {\n        if (item.key === focusedItemId) {\n          focusItemIsPresent = true;\n        }\n      });\n      if (!focusItemIsPresent) {\n        this.releaseFocus(undefined, true);\n      }\n    }\n  }\n\n  setFocusState(itemKey, itemState) {\n    this.setState({\n      focusedItemId: itemKey,\n      focusedItemState: itemState,\n    });\n  }\n\n  resetFocusState() {\n    this.setFocusState();\n  }\n\n  requestFocus(itemId, itemState) {\n    const { disclose } = this.props;\n    const { focusedItemId } = this.state;\n\n    return new Promise((resolve, reject) => {\n      this.releaseFocus(focusedItemId)\n        .then(() => {\n          this.setFocusState(itemId, Object.freeze(itemState || {}));\n\n          const focusRequestPayload = {};\n\n          /**\n           * If the Aggregator is rendered within the context of a DisclosureManager, the focus request is resolved with a custom\n           * disclose implementation.\n           */\n          if (disclose) {\n            focusRequestPayload.disclose = (data) => {\n              /**\n               * If the itemId no longer matches the focusedItemId, then the disclose is being called after\n               * the item has lost focus. This can happen if an Aggregator item caches the disclosue function they're given\n               * and calls it later.\n               */\n              if (this.state.focusedItemId !== itemId) {\n                return Promise.reject();\n              }\n\n              return disclose(data)\n                .then(({ afterDismiss, dismissDisclosure, ...other }) => {\n                  /**\n                   * The disclosure's dismissDisclosure instance is cached so it can be called later. If an Aggregator item is\n                   * currently presenting a disclosure and releases focus, we will call this function to force\n                   * the disclosure to close.\n                   */\n                  this.forceDismissInstance = dismissDisclosure;\n\n                  /**\n                   * A handler is added to the deferred afterDismiss promise chain to remove the cached dismissDisclosure instance (the disclosure is\n                   * closing, so it is no longer relevant). The handler also resets the focus state if focus is currently held by a component.\n                   */\n                  afterDismiss.then(() => {\n                    this.forceDismissInstance = undefined;\n\n                    if (this.state.focusedItemId) {\n                      this.resetFocusState();\n                    }\n                  });\n\n                  // We return the same API so as not to disrupt the chain.\n                  return { afterDismiss, dismissDisclosure, ...other };\n                });\n            };\n          }\n\n          resolve(focusRequestPayload);\n        })\n        .catch(() => {\n          reject();\n        });\n    });\n  }\n\n  releaseFocus(itemId, force) {\n    // If nothing is currently in focus, we can resolve immediately.\n    if (!this.state.focusedItemId) {\n      return Promise.resolve();\n    }\n\n    /**\n     * If the provided item ID is not the currently focused ID, and the release is not forced,\n     * the release is rejected to protect against delayed calls.\n     */\n    if (itemId !== this.state.focusedItemId && !force) {\n      return Promise.reject();\n    }\n\n    return new Promise((resolve, reject) => {\n      /**\n       * If forceDismissInstance is present, a disclosure must have been opened by the currently focused\n       * Aggregator item. Therefore, we will call the forceDismissInstance in order to keep things in sync. The promise\n       * returned by forceDismissInstance will be inserted into the Promise chain. If the promise is rejected,\n       * the Aggregator's focus state will not be reset.\n       *\n       * The focus is only reset if the disclosure was dismissed successfully.\n       */\n      if (this.forceDismissInstance) {\n        this.forceDismissInstance()\n          .then(() => {\n            this.resetFocusState();\n            resolve();\n          })\n          .catch(() => {\n            reject();\n          });\n      } else {\n        // If a previous disclosure is not detected, we can immediately resolve and reset the focus.\n        this.resetFocusState();\n        resolve();\n      }\n    });\n  }\n\n  renderItems() {\n    const { items } = this.props;\n    const { focusedItemId, focusedItemState } = this.state;\n\n    return items.map((item) => {\n      const childIsActive = focusedItemId === item.key;\n\n      /**\n       * Each child given to the Aggregator is provided with an 'aggregatorDelegate' prop with the following values:\n       * hasFocus - A Boolean flag indicating whether or not the child is currently focused\n       * requestFocus - A function that will attempt to provide focus to the calling child. It takes an Object parameter that\n       *                should hold state data relevant to the focus event. The function returns a Promise that is resolved if\n       *                the focus request was successful. The Promise is resolved with a 'disclose' function that can be used to\n       *                disclose further content in a manner managed by the Aggregator. If the focus request was unsuccessful, the\n       *                Promise will be rejected.\n       * releaseFocus - A function that will attempt to release the focus held by the calling child. Returns a promse that is\n       *                resolved if the release request was successful. If the release request was unsuccessful, the\n       *                Promise will be rejected. This function is only provided to components that are focused.\n       * itemState     - An Object containing the state given to the Aggregator during the focus request.\n       */\n      return React.cloneElement(item.component, {\n        key: item.key,\n        aggregatorDelegate: {\n          hasFocus: childIsActive,\n          requestFocus: state => this.requestFocus(item.key, state),\n          releaseFocus: childIsActive ? () => (this.releaseFocus(item.key)) : undefined,\n          itemState: childIsActive ? focusedItemState : undefined,\n        },\n      });\n    });\n  }\n\n  render() {\n    const renderedItems = this.renderItems();\n\n    if (this.props.render) {\n      return this.props.render({ items: renderedItems });\n    }\n\n    return (\n      <div>\n        {renderedItems}\n      </div>\n    );\n  }\n}\n\nAggregator.propTypes = propTypes;\nAggregator.defaultProps = defaultProps;\n\nexport default Aggregator;\n"},1676:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(18)),o=a(n(22)),s=a(n(23)),l=a(n(24)),i=a(n(25)),c=a(n(26)),u=a(n(0)),d=a(n(1078)),m=a(n(1125)),f=Object.freeze([{key:"SECTION_0",component:u.default.createElement(m.default,{name:"Section 0"})},{key:"SECTION_1",component:u.default.createElement(m.default,{name:"Section 1"})},{key:"SECTION_2",component:u.default.createElement(m.default,{name:"Section 2"})},{key:"SECTION_3",component:u.default.createElement(m.default,{name:"Section 3"})}]),g=function(e){function t(e){var n;return(0,o.default)(this,t),(n=(0,l.default)(this,(0,i.default)(t).call(this,e))).state={flip:!1},n}return(0,c.default)(t,e),(0,s.default)(t,[{key:"render",value:function(){var e=this;return u.default.createElement("div",null,u.default.createElement("button",{type:"button",onClick:function(){e.setState((function(e){return{flip:!e.flip}}))}},"Flip Section Order"),u.default.createElement("button",{type:"button",onClick:function(){e.forceUpdate()}},"Force Aggregator Render"),u.default.createElement(d.default,{items:this.state.flip?(0,r.default)([],f).reverse():f}))}}]),t}(u.default.Component);t.default=g},1677:function(e,t,n){e.exports={"readonly-modal-content":"AggregatorItem-module__readonly-modal-content___2Gl-l","header-arrange":"AggregatorItem-module__header-arrange___3Y-sj","header-arrange-content":"AggregatorItem-module__header-arrange-content___1D4ya"}},1678:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(22)),o=a(n(23)),s=a(n(24)),l=a(n(25)),i=a(n(29)),c=a(n(26)),u=a(n(0)),d=a(n(2)),m=a(n(4)),f=a(n(54)),g=a(n(48)),p=a(n(347)),h=a(n(81)),v=n(212),y=a(n(1679)),S=m.default.bind(y.default),b={name:d.default.string,disclosureType:d.default.string,disclosureManager:v.disclosureManagerShape},I=function(e){function t(e){var n;return(0,r.default)(this,t),(n=(0,s.default)(this,(0,l.default)(t).call(this,e))).checkLockState=n.checkLockState.bind((0,i.default)(n)),n.state={text:void 0},n}return(0,c.default)(t,e),(0,o.default)(t,[{key:"componentDidMount",value:function(){var e=this.props.disclosureManager;e&&e.registerDismissCheck&&e.registerDismissCheck(this.checkLockState)}},{key:"checkLockState",value:function(){var e=this;return this.state.text&&this.state.text.length?new Promise((function(t,n){confirm("".concat(e.props.name," has unsaved changes that will be lost. Do you wish to continue?"))?t():n()})):Promise.resolve()}},{key:"render",value:function(){var e=this,t=this.props,n=t.disclosureManager,a=t.name,r=t.disclosureType;return u.default.createElement(g.default,{fill:!0,header:u.default.createElement(h.default,{title:"Disclosure - ".concat(a),onClose:n.closeDisclosure,onBack:n.goBack,onMaximize:n.maximize,onMinimize:n.minimize})},u.default.createElement("div",{className:S("content-wrapper")},u.default.createElement("h3",null,a),u.default.createElement("p",null,"The disclosed component can disclose content within the same panel."),u.default.createElement("p",null,"It can also render a header (like above) that implements the various DisclosureManager control functions."),u.default.createElement(f.default,{text:"Dismiss",onClick:function(){n.dismiss().catch((function(){console.log("Dismiss failed. A lock must be in place.")}))}}),u.default.createElement(f.default,{text:"Disclose Again",onClick:function(){n.disclose({preferredType:r,size:"small",content:{key:"Nested ".concat(a),component:u.default.createElement(E,{name:"Nested ".concat(a),disclosureType:r})}})}}),u.default.createElement("br",null),u.default.createElement("br",null),u.default.createElement("p",null,"The disclosed component can register a dismiss check function that can interrupt and prevent dismissal. This component will prompt the user if text is detected in the input field below."),u.default.createElement(p.default,{value:this.state.text||"",onChange:function(t){e.setState({text:t.target.value})}}),this.state.text&&this.state.text.length?u.default.createElement("p",null,"Component has unsaved changes!"):null))}}]),t}(u.default.Component);I.propTypes=b,I.defaultProps={name:"Disclosure Component"};var E=(0,v.withDisclosureManager)(I),A=E;t.default=A},1679:function(e,t,n){e.exports={"example-wrapper":"example-styles-module__example-wrapper___2co2f","content-wrapper":"example-styles-module__content-wrapper___2K089"}},1680:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\n\nimport Aggregator from 'terra-aggregator';\nimport AggregatorItem from 'terra-aggregator/lib/terra-dev-site/doc/common/AggregatorItem';\n\nconst items = Object.freeze([{\n  key: 'SECTION_0',\n  component: <AggregatorItem name=\"Section 0\" />,\n}, {\n  key: 'SECTION_1',\n  component: <AggregatorItem name=\"Section 1\" />,\n}, {\n  key: 'SECTION_2',\n  component: <AggregatorItem name=\"Section 2\" />,\n}, {\n  key: 'SECTION_3',\n  component: <AggregatorItem name=\"Section 3\" />,\n}]);\n\nclass StandaloneAggregatorExample extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flip: false,\n    };\n  }\n\n  render() {\n    const body = (\n      <div>\n        <button type=\"button\" onClick={() => { this.setState(prevState => ({ flip: !prevState.flip })); }}>Flip Section Order</button>\n        <button type=\"button\" onClick={() => { this.forceUpdate(); }}>Force Aggregator Render</button>\n        <Aggregator\n          items={this.state.flip ? Object.assign([], items).reverse() : items}\n        />\n      </div>\n    );\n\n    return body;\n  }\n}\n\nexport default StandaloneAggregatorExample;\n"},1681:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=a(n(1682)),s=a(n(1078)),l=a(n(1125)),i=Object.freeze([{key:"SECTION_0",component:r.default.createElement(l.default,{name:"Section 0"})},{key:"SECTION_1",component:r.default.createElement(l.default,{name:"Section 1"})},{key:"SECTION_2",component:r.default.createElement(l.default,{name:"Section 2"})},{key:"SECTION_3",component:r.default.createElement(l.default,{name:"Section 3"})}]),c=function(){return r.default.createElement("div",null,r.default.createElement(s.default,{items:i,render:function(e){return r.default.createElement(o.default,null,r.default.createElement(o.default.Row,null,r.default.createElement(o.default.Column,{tiny:6},e.items[0]),r.default.createElement(o.default.Column,{tiny:6},e.items[1])),r.default.createElement(o.default.Row,null,r.default.createElement(o.default.Column,{tiny:6},e.items[2]),r.default.createElement(o.default.Column,{tiny:6},e.items[3])))}}))};t.default=c},1685:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport Grid from 'terra-grid';\n\nimport Aggregator from 'terra-aggregator';\nimport AggregatorItem from 'terra-aggregator/lib/terra-dev-site/doc/common/AggregatorItem';\n\nconst items = Object.freeze([{\n  key: 'SECTION_0',\n  component: <AggregatorItem name=\"Section 0\" />,\n}, {\n  key: 'SECTION_1',\n  component: <AggregatorItem name=\"Section 1\" />,\n}, {\n  key: 'SECTION_2',\n  component: <AggregatorItem name=\"Section 2\" />,\n}, {\n  key: 'SECTION_3',\n  component: <AggregatorItem name=\"Section 3\" />,\n}]);\n\nconst CustomRenderAggregatorExample = () => (\n  <div>\n    <Aggregator\n      items={items}\n      render={renderData => (\n        <Grid>\n          <Grid.Row>\n            <Grid.Column tiny={6}>\n              {renderData.items[0]}\n            </Grid.Column>\n            <Grid.Column tiny={6}>\n              {renderData.items[1]}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column tiny={6}>\n              {renderData.items[2]}\n            </Grid.Column>\n            <Grid.Column tiny={6}>\n              {renderData.items[3]}\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n    />\n  </div>\n);\n\nexport default CustomRenderAggregatorExample;\n"},1686:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=n(212),s=a(n(338)),l=a(n(1687)),i=(0,o.withDisclosureManager)((function(e){var t=e.disclosureManager;return r.default.createElement("button",{type:"button",onClick:function(){t.disclose({preferredType:"modal",size:"large",content:{key:"MODAL_EXAMPLE",component:r.default.createElement(l.default,{identifier:"MODAL_EXAMPLE"})}})}},"Launch Modal")}));i.propTypes={disclosureManager:o.disclosureManagerShape};var c=function(){return r.default.createElement("div",null,r.default.createElement(s.default,null,r.default.createElement(i,null)))};t.default=c},1687:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=a(n(48)),s=a(n(81)),l=n(212),i=a(n(1078)),c=a(n(1125)),u=a(n(1454)),d=Object.freeze([{key:"SECTION_0",component:r.default.createElement(c.default,{name:"Slide Panel Section",disclosureType:"panel",discloseOnSelect:!0})},{key:"SECTION_1",component:r.default.createElement(c.default,{name:"Modal Section",disclosureType:"modal",discloseOnSelect:!0})},{key:"SECTION_2",component:r.default.createElement(u.default,{name:"No Disclosure Section"})}]),m=function(e){var t=e.disclosureManager;return r.default.createElement(o.default,{fill:!0,header:r.default.createElement(s.default,{onClose:t.closeDisclosure,onBack:t.goBack})},r.default.createElement(i.default,{items:d,disclose:t.disclose}))};m.propTypes={disclosureManager:l.disclosureManagerShape};var f=(0,l.withDisclosureManager)(m);t.default=f},1690:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport { withDisclosureManager, disclosureManagerShape } from 'terra-disclosure-manager';\nimport ModalManager from 'terra-modal-manager';\n\nimport ModalAggregator from 'terra-aggregator/lib/terra-dev-site/doc/common/ModalAggregator';\n\nconst ModalButton = withDisclosureManager(({ disclosureManager }) => (\n  <button\n    type=\"button\"\n    onClick={() => {\n      disclosureManager.disclose({\n        preferredType: 'modal',\n        size: 'large',\n        content: {\n          key: 'MODAL_EXAMPLE',\n          component: <ModalAggregator identifier=\"MODAL_EXAMPLE\" />,\n        },\n      });\n    }}\n  >\n    Launch Modal\n  </button>\n));\n\nModalButton.propTypes = {\n  disclosureManager: disclosureManagerShape,\n};\n\nconst SimpleAggregatorExample = () => (\n  <div>\n    <ModalManager>\n      <ModalButton />\n    </ModalManager>\n  </div>\n);\n\nexport default SimpleAggregatorExample;\n"},1691:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=a(n(338)),s=a(n(1057)),l=n(212),i=a(n(1078)),c=a(n(1125)),u=a(n(1454)),d=Object.freeze([{key:"SECTION_0",component:r.default.createElement(c.default,{name:"Slide Panel Section",disclosureType:"panel",discloseOnSelect:!0})},{key:"SECTION_1",component:r.default.createElement(c.default,{name:"Modal Section",disclosureType:"modal",discloseOnSelect:!0})},{key:"SECTION_2",component:r.default.createElement(u.default,{name:"No Disclosure Section"})}]),m=(0,l.withDisclosureManager)((function(e){var t=e.disclosureManager;return r.default.createElement(i.default,{items:d,disclose:t.disclose})})),f=function(){return r.default.createElement("div",null,r.default.createElement(o.default,null,r.default.createElement(s.default,null,r.default.createElement(m,null))))};t.default=f},1692:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport ModalManager from 'terra-modal-manager';\nimport SlidePanelManager from 'terra-slide-panel-manager';\nimport { withDisclosureManager } from 'terra-disclosure-manager';\n\nimport Aggregator from 'terra-aggregator';\nimport AggregatorItem from 'terra-aggregator/lib/terra-dev-site/doc/common/AggregatorItem';\nimport SimpleAggregatorItem from 'terra-aggregator/lib/terra-dev-site/doc/common/SimpleAggregatorItem';\n\nconst items = Object.freeze([{\n  key: 'SECTION_0',\n  component: <AggregatorItem name=\"Slide Panel Section\" disclosureType=\"panel\" discloseOnSelect />,\n}, {\n  key: 'SECTION_1',\n  component: <AggregatorItem name=\"Modal Section\" disclosureType=\"modal\" discloseOnSelect />,\n}, {\n  key: 'SECTION_2',\n  component: <SimpleAggregatorItem name=\"No Disclosure Section\" />,\n}]);\n\nconst Wrapper = withDisclosureManager(({ disclosureManager }) => (\n  <Aggregator\n    items={items}\n    disclose={disclosureManager.disclose}\n  />\n));\n\nconst CombinedDisclosureExample = () => (\n  <div>\n    <ModalManager>\n      <SlidePanelManager>\n        <Wrapper />\n      </SlidePanelManager>\n    </ModalManager>\n  </div>\n);\n\nexport default CombinedDisclosureExample;\n"},1693:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=a(n(338)),s=a(n(1057)),l=a(n(1078)),i=a(n(1125)),c=n(212),u=(0,c.withDisclosureManager)((function(e){var t=e.items,n=e.disclosureManager;return r.default.createElement(l.default,{items:t,disclose:n.disclose})})),d=(0,c.withDisclosureManager)((function(e){var t=e.disclosureManager,n=Object.freeze([{key:"SECTION_0",component:r.default.createElement(i.default,{name:"Section 0",disclosureType:"panel",key:"SECTION_0",customDisclose:t.disclose,discloseOnSelect:!0})},{key:"SECTION_1",component:r.default.createElement(i.default,{name:"Section 1",disclosureType:"panel",key:"SECTION_1",customDisclose:t.disclose,discloseOnSelect:!0})}]);return r.default.createElement(s.default,null,r.default.createElement(u,{items:n}))})),m=function(){return r.default.createElement("div",null,r.default.createElement("p",null,"In this example, the Aggregator items are provided with the ModalManager disclosure function directly. Calling that function does not require Aggregator focus and will bypass the Aggregator entirely. This can be useful for simple Modal workflows that should not impact Aggregator state."),r.default.createElement(o.default,null,r.default.createElement(d,null)))};t.default=m},1694:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport ModalManager from 'terra-modal-manager';\nimport SlidePanelManager from 'terra-slide-panel-manager';\n\nimport Aggregator from 'terra-aggregator';\nimport AggregatorItem from 'terra-aggregator/lib/terra-dev-site/doc/common/AggregatorItem';\nimport { withDisclosureManager } from 'terra-disclosure-manager';\n\nconst Wrapper = withDisclosureManager(({ items, disclosureManager }) => (\n  <Aggregator\n    items={items}\n    disclose={disclosureManager.disclose}\n  />\n));\n\nconst ModalManagerBypass = withDisclosureManager(({ disclosureManager }) => {\n  const items = Object.freeze([{\n    key: 'SECTION_0',\n    component: <AggregatorItem name=\"Section 0\" disclosureType=\"panel\" key=\"SECTION_0\" customDisclose={disclosureManager.disclose} discloseOnSelect />,\n  }, {\n    key: 'SECTION_1',\n    component: <AggregatorItem name=\"Section 1\" disclosureType=\"panel\" key=\"SECTION_1\" customDisclose={disclosureManager.disclose} discloseOnSelect />,\n  }]);\n\n  return (\n    <SlidePanelManager>\n      <Wrapper items={items} />\n    </SlidePanelManager>\n  );\n});\n\nconst ModalBypassExample = () => (\n  <div>\n    <p>\n      In this example, the Aggregator items are provided with the ModalManager disclosure function directly.\n      Calling that function does not require Aggregator focus and will bypass the Aggregator entirely. This can be\n      useful for simple Modal workflows that should not impact Aggregator state.\n    </p>\n    <ModalManager>\n      <ModalManagerBypass />\n    </ModalManager>\n  </div>\n);\n\nexport default ModalBypassExample;\n"},2233:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=a(n(0)),o=a(n(961)),s=n(1673),l=a(n(1674)),i=a(n(1675)),c=a(n(1676)),u=a(n(1680)),d=a(n(1681)),m=a(n(1685)),f=a(n(1686)),g=a(n(1690)),p=a(n(1691)),h=a(n(1692)),v=a(n(1693)),y=a(n(1694)),S=function(){return r.default.createElement(o.default,{packageName:s.name,readme:l.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(s.name),examples:[{title:"Standalone Aggregator",example:r.default.createElement(c.default,null),source:u.default},{title:"Custom Render Aggregator",example:r.default.createElement(d.default,null),source:m.default},{title:"Combined Discloure Aggregator",example:r.default.createElement(p.default,null),source:h.default},{title:"Disclosure Bypass Aggregator",description:"In this example, the Aggregator items are provided with the ModalManager disclosure function directly. Calling that function does not require Aggregator focus and will bypass the Aggregator entirely. This can be useful for simple Modal workflows that should not impact Aggregator state.",example:r.default.createElement(v.default,null),source:y.default},{title:"Aggregator In Modal",example:r.default.createElement(f.default,null),source:g.default}],propsTables:[{componentSrc:i.default}]})};t.default=S},962:function(e,t){},974:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.SlidePanelPositions=t.default=void 0;var r=a(n(18)),o=a(n(32)),s=a(n(22)),l=a(n(23)),i=a(n(24)),c=a(n(25)),u=a(n(29)),d=a(n(26)),m=a(n(0)),f=a(n(2)),g=a(n(4)),p=a(n(985)),h=g.default.bind(p.default),v={START:"start",END:"end"};t.SlidePanelPositions=v;var y={mainContent:f.default.node,panelContent:f.default.node,panelBehavior:f.default.oneOf(["overlay","squish"]),panelPosition:f.default.oneOf(["start","end"]),panelSize:f.default.oneOf(["small","large"]),isFullscreen:f.default.bool,isOpen:f.default.bool,fill:f.default.bool},S={panelBehavior:"overlay",panelPosition:v.END,panelSize:"small"},b=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,i.default)(this,(0,c.default)(t).call(this,e))).setPanelNode=n.setPanelNode.bind((0,u.default)(n)),n.mainNode=m.default.createRef(),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"componentDidUpdate",value:function(e){this.props.isOpen&&this.props.isOpen!==e.isOpen?this.panelNode.focus():this.props.isOpen||this.props.isOpen===e.isOpen||this.mainNode.current.focus()}},{key:"setPanelNode",value:function(e){this.panelNode=e}},{key:"render",value:function(){var e=this.props,t=e.mainContent,n=e.panelContent,a=e.panelBehavior,s=e.panelPosition,l=e.panelSize,i=e.isFullscreen,c=e.isOpen,u=e.fill,d=(0,o.default)(e,["mainContent","panelContent","panelBehavior","panelPosition","panelSize","isFullscreen","isOpen","fill"]),f=h(["slide-panel",{"is-open":c},{"is-fullscreen":i},{fill:u},d.className]),g=m.default.createElement("div",{className:h(["panel"]),tabIndex:"-1","aria-hidden":c?"false":"true",ref:this.setPanelNode},n),p=m.default.createElement("div",{className:h("main"),tabIndex:"-1",ref:this.mainNode},t),y=s===v.START?m.default.createElement(m.default.Fragment,null,g,p):m.default.createElement(m.default.Fragment,null,p,g);return m.default.createElement("div",(0,r.default)({},d,{className:f,"data-slide-panel-panel-behavior":a,"data-slide-panel-panel-position":s,"data-slide-panel-panel-size":l}),y)}}]),t}(m.default.Component);b.propTypes=y,b.defaultProps=S;var I=b;t.default=I},985:function(e,t,n){e.exports={"slide-panel":"SlidePanel-module__slide-panel___16_Ez",main:"SlidePanel-module__main___Qtxtf",panel:"SlidePanel-module__panel___2NV-G","is-open":"SlidePanel-module__is-open___IAbgR","is-fullscreen":"SlidePanel-module__is-fullscreen___29Ymh",fill:"SlidePanel-module__fill___11BRG"}}}]);
//# sourceMappingURL=71-63f5ec0af7583ae23f26.js.map