(window.webpackJsonp=window.webpackJsonp||[]).push([[63,3],{1132:function(e,t,n){e.exports={"time-input":"TimeInput-module__time-input___T4wlC","time-input-hour":"TimeInput-module__time-input-hour___2VQ6_","time-input-minute":"TimeInput-module__time-input-minute___1elGu","time-input-second":"TimeInput-module__time-input-second___3X_4K","meridiem-display":"TimeInput-module__meridiem-display___16bTl","is-focused":"TimeInput-module__is-focused___niMlR",disabled:"TimeInput-module__disabled___CSggS","time-input-group":"TimeInput-module__time-input-group___9V3oL",desktop:"TimeInput-module__desktop___1gtms","initial-focus":"TimeInput-module__initial-focus___3pBpb","without-second":"TimeInput-module__without-second___2G5o1","with-second":"TimeInput-module__with-second___1EprD","time-spacer":"TimeInput-module__time-spacer___kAFrV","mobile-time-picker":"TimeInput-module__mobile-time-picker___3RdnY","meridiem-button-group":"TimeInput-module__meridiem-button-group___3sIUS","mobile-input-label":"TimeInput-module__mobile-input-label___2W6me",focused:"TimeInput-module__focused___1f8Uk","meridiem-button":"TimeInput-module__meridiem-button___2_S7a","time-input-meridiem":"TimeInput-module__time-input-meridiem___3FlHM","meridiem-select-wrapper":"TimeInput-module__meridiem-select-wrapper___16R61"}},1348:function(e){e.exports=JSON.parse('{"name":"terra-date-time-picker","main":"lib/DateTimePicker.js","version":"4.15.0","description":"The DateTimePicker component has a date picker for selecting date and a time input for entering time","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","terra-date-time-picker","DateTimePicker","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","keycode-js":"^2.0.1","moment":"^2.21.0","moment-timezone":"^0.5.13","prop-types":"^15.5.8","terra-abstract-modal":"^3.14.0","terra-button":"^3.3.0","terra-date-picker":"^4.15.0","terra-time-input":"^4.12.0"},"devDependencies":{"terra-doc-template":"^2.2.0","terra-form-field":"^3.1.0","terra-modal-manager":"^6.14.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},1844:function(e,t,n){"use strict";n.r(t),t.default="# Terra Date Time Picker\n\nThe DateTimePicker component composes the [DatePicker][1] component for selecting date and the [TimeInput][2] component for entering time. A date and time can be expressed in many [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formats. To reduce confusion and complexity, the date time props in DateTimePicker must be expressed in a specific format of the ISO 8601 representation of the date time. That is, any date time prop must conform to the `YYYY-MM-DDThh:mm:ss` format. DateTimePicker supports the Spring and Fall daylight saving time changes in the following behaviors:\n\nSpring: If you enter a date and time that falls within the missing hour during the Spring time change, the time will automatically be adjusted to the next relevant hour when the component loses focus. In the central time zone, the missing hour occurs between 2:00 and 2:59. For example, if the entered time is 2:15, the component will automatically adjust the time to the next hour at 3:15.\n\nFall: If you enter a date and time that falls within the ambiguous hour during the Fall time change, the component will display a dialog to require you to select daylight or standard time. After a selection is made a button will be displayed with a label showing the selected option.\n\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-date-time-picker`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| react-intl | ^2.8.0 |\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Implementation Notes:\nDateTimePicker is required to be composed inside the [Base][3] component with locale in order for it to load the correct date format and translation strings.\n\n[1]: https://github.com/cerner/terra-framework/tree/master/packages/terra-date-picker/docs\n[2]: https://github.com/cerner/terra-framework/tree/master/packages/terra-time-input/docs\n[3]: https://github.com/cerner/terra-core/tree/master/packages/terra-base/docs\n\n\n## Component Features\n* [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n* [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n* [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n* [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n* [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n* [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\n"},1845:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport DatePicker from 'terra-date-picker';\nimport TimeInput from 'terra-time-input';\nimport * as KeyCode from 'keycode-js';\nimport DateUtil from 'terra-date-picker/lib/DateUtil';\nimport styles from './DateTimePicker.module.scss';\nimport DateTimeUtils from './DateTimeUtils';\nimport TimeClarification from './_TimeClarification';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * Custom input attributes to apply to the date input. Use the name prop to set the name for the date input.\n   * Do not set the name in inputAttribute as it will be ignored.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  dateInputAttributes: PropTypes.object,\n  /**\n   * Whether the date and time inputs should be disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * An array of ISO 8601 string representation of the dates to disable in the picker. The values must be in the `YYYY-MM-DDThh:mm:ss` format.\n   */\n  excludeDates: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * A function that gets called for each date in the picker to evaluate which date should be disabled.\n   * A return value of true will be enabled and false will be disabled.\n   */\n  filterDate: PropTypes.func,\n  /**\n   * An array of ISO 8601 string representation of the dates to enable in the picker. The values must be in the `YYYY-MM-DDThh:mm:ss` format.\n   * All Other dates will be disabled.\n   */\n  includeDates: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * intl object programmatically imported through injectIntl from react-intl.\n   * */\n  intl: intlShape.isRequired,\n  /**\n   * An ISO 8601 string representation of the maximum date that can be selected in the date picker. The value must be in the `YYYY-MM-DD` format.\n   * The time portion in this value is ignored because this is strictly used in the date picker.\n   */\n  maxDate: PropTypes.string,\n  /**\n   * An ISO 8601 string representation of the minimum date that can be selected in the date picker. The value must be in the `YYYY-MM-DD` format.\n   * The time portion in this value is ignored because this is strictly used in the date picker.\n   */\n  minDate: PropTypes.string,\n  /**\n   * Name of the date input. The name should be unique.\n   */\n  name: PropTypes.string.isRequired,\n  /**\n   * A callback function triggered when the entire date time picker component loses focus.\n   * This event does not get triggered when the focus is moved from the date input to the time input because the focus is still within the main date time picker component.\n   */\n  onBlur: PropTypes.func,\n  /**\n   * A callback function to execute when a valid date is selected or entered.\n   * The first parameter is the event. The second parameter is the changed input value.\n   */\n  onChange: PropTypes.func,\n  /**\n   * A callback function to execute when a change is made in the date or time input.\n   * The first parameter is the event. The second parameter is the changed input value.\n   */\n  onChangeRaw: PropTypes.func,\n  /**\n   * A callback function to execute when clicking outside of the picker to dismiss it.\n   */\n  onClickOutside: PropTypes.func,\n  /**\n   * A callback function triggered when the date input, hour input, or minute input receives focus.\n   */\n  onFocus: PropTypes.func,\n  /**\n   * A callback function to execute when a selection is made in the date picker.\n   * The first parameter is the event. The second parameter is the selected input value in ISO format.\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Whether an input field for seconds should be shown or not. If true then the second field must have a valid\n   * number for the overall input to be considered valid.\n   */\n  showSeconds: PropTypes.bool,\n  /**\n   * Custom input attributes to apply to the time input. Use the name prop to set the name for the time input.\n   * Do not set the name in inputAttribute as it will be ignored.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  timeInputAttributes: PropTypes.object,\n  /**\n   * An ISO 8601 string representation of the initial value to show in the date and time inputs. The value must be in the `YYYY-MM-DDThh:mm:ss` format.\n   */\n  value: PropTypes.string,\n  /**\n   * Type of time input to initialize. Must be `24-hour` or `12-hour`.\n   * The `de`, `es-ES`, `fr-FR`, `fr`, `nl-BE`, `nl`, `pt-BR`, `pt`, `sv-SE` and `sv` locales do not use the 12-hour time notation.\n   * If the `variant` prop if set to `12-hour` for one of these supported locales, the variant will be ignored and defaults to `24-hour`.\n   */\n  timeVariant: PropTypes.oneOf([DateTimeUtils.FORMAT_12_HOUR, DateTimeUtils.FORMAT_24_HOUR]),\n};\n\nconst defaultProps = {\n  dateInputAttributes: undefined,\n  disabled: false,\n  excludeDates: undefined,\n  filterDate: undefined,\n  includeDates: undefined,\n  maxDate: undefined,\n  minDate: undefined,\n  onBlur: undefined,\n  onChange: undefined,\n  onChangeRaw: undefined,\n  onClickOutside: undefined,\n  onFocus: undefined,\n  onSelect: undefined,\n  showSeconds: false,\n  timeInputAttributes: undefined,\n  value: undefined,\n  timeVariant: DateTimeUtils.FORMAT_24_HOUR,\n};\n\nclass DateTimePicker extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateTime: DateTimeUtils.createSafeDate(props.value),\n      isAmbiguousTime: false,\n      isTimeClarificationOpen: false,\n      dateFormat: DateUtil.getFormatByLocale(props.intl.locale),\n      prevPropsValue: props.value,\n    };\n\n    // The dateValue and timeValue variables represent the actual value in the date input and time input respectively.\n    // They are used to keep track of the currently entered value to determine whether or not the entry is valid.\n    // Unlike dateValue and timeValue, this.state.dateTime is the internal moment object representing both the date and time as one entity\n    // It is used for date/time manipulation and used to calculate the missing/ambiguous hour.\n    // The dateValue and timeValue are tracked outside of the react state to limit the number of renderings that occur.\n    this.dateValue = DateUtil.formatMomentDate(this.state.dateTime, this.state.dateFormat) || '';\n    this.timeValue = DateTimeUtils.hasTime(this.props.value) ? DateTimeUtils.getTime(this.props.value, this.props.showSeconds) : '';\n    this.isDefaultDateTimeAcceptable = true;\n    this.wasOffsetButtonClicked = false;\n\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleDateChangeRaw = this.handleDateChangeRaw.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleOnSelect = this.handleOnSelect.bind(this);\n    this.handleOnDateBlur = this.handleOnDateBlur.bind(this);\n    this.handleOnTimeBlur = this.handleOnTimeBlur.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleDaylightSavingButtonClick = this.handleDaylightSavingButtonClick.bind(this);\n    this.handleStandardTimeButtonClick = this.handleStandardTimeButtonClick.bind(this);\n    this.handleOnDateInputFocus = this.handleOnDateInputFocus.bind(this);\n    this.handleOnTimeInputFocus = this.handleOnTimeInputFocus.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOnCalendarButtonClick = this.handleOnCalendarButtonClick.bind(this);\n    this.handleOffsetButtonClick = this.handleOffsetButtonClick.bind(this);\n    this.handleOnRequestClose = this.handleOnRequestClose.bind(this);\n    this.dateTimePickerContainer = React.createRef();\n    this.containerHasFocus = false;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.value !== prevState.prevPropsValue) {\n      return {\n        dateTime: DateTimeUtils.createSafeDate(nextProps.value),\n        prevPropsValue: nextProps.value,\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.isDefaultDateAcceptable = this.validateDefaultDate();\n  }\n\n  handleOnSelect(event, selectedDate) {\n    this.dateValue = DateUtil.formatISODate(selectedDate, this.state.dateFormat);\n    const previousDateTime = this.state.dateTime ? this.state.dateTime.clone() : null;\n    const updatedDateTime = DateTimeUtils.syncDateTime(previousDateTime, selectedDate, this.timeValue, this.props.showSeconds);\n\n    if (!previousDateTime || previousDateTime.format() !== updatedDateTime.format()) {\n      this.checkAmbiguousTime(updatedDateTime);\n    }\n\n    if (this.props.onSelect) {\n      this.props.onSelect(event, updatedDateTime.format());\n    }\n  }\n\n  handleOnDateBlur(event) {\n    // Modern browsers support event.relatedTarget but event.relatedTarget returns null in IE 10 / IE 11.\n    // IE 11 sets document.activeElement to the next focused element before the blur event is called.\n    const activeTarget = event.relatedTarget ? event.relatedTarget : document.activeElement;\n\n    // Handle blur only if focus has moved out of the entire date time picker component.\n    if (!this.dateTimePickerContainer.current.contains(activeTarget)) {\n      const isDateTimeValid = DateTimeUtils.isValidDateTime(this.dateValue, this.timeValue, this.state.dateFormat, this.props.showSeconds);\n      const enteredDateTime = isDateTimeValid ? this.state.dateTime : null;\n\n      this.checkAmbiguousTime(enteredDateTime, () => {\n        // If the entered time is ambiguous then do not handle blur just yet. It should be handled _after_\n        // the ambiguity is resolved (i.e., after dismissing the Time Clarification dialog).\n        if (!(this.state.isAmbiguousTime && this.state.isTimeClarificationOpen)) {\n          this.handleBlur(event, this.state.dateTime);\n        }\n      });\n    }\n  }\n\n  handleOnTimeBlur(event) {\n    // Modern browsers support event.relatedTarget but event.relatedTarget returns null in IE 10 / IE 11.\n    // IE 11 sets document.activeElement to the next focused element before the blur event is called.\n    const activeTarget = event.relatedTarget ? event.relatedTarget : document.activeElement;\n\n    // Handle blur only if focus has moved out of the entire date time picker component.\n    if (!this.dateTimePickerContainer.current.contains(activeTarget)) {\n      const isDateTimeValid = DateTimeUtils.isValidDateTime(this.dateValue, this.timeValue, this.state.dateFormat, this.props.showSeconds);\n      let updatedDateTime;\n\n      if (isDateTimeValid) {\n        updatedDateTime = DateTimeUtils.updateTime(this.state.dateTime, this.timeValue, this.props.showSeconds);\n      }\n\n      this.checkAmbiguousTime(updatedDateTime, () => {\n        // If the entered time is ambiguous then do not handle blur just yet. It should be handled _after_\n        // the ambiguity is resolved (i.e., after dismissing the Time Clarification dialog).\n        if (!(this.state.isAmbiguousTime && this.state.isTimeClarificationOpen)) {\n          this.handleBlur(event, this.state.dateTime);\n        }\n      });\n    }\n  }\n\n  handleBlur(event, momentDateTime) {\n    if (this.props.onBlur) {\n      const isCompleteDateTime = DateTimeUtils.isValidDateTime(this.dateValue, this.timeValue, this.state.dateFormat, this.props.showSeconds);\n      let value = '';\n      if (this.dateValue) {\n        value = this.dateValue.concat(' ');\n      }\n\n      if (this.timeValue) {\n        value = value.concat(this.timeValue);\n      }\n\n      value = value.trim();\n\n      const tempDateTime = momentDateTime ? momentDateTime.clone() : null;\n      let iSOString = '';\n\n      if (isCompleteDateTime && tempDateTime) {\n        iSOString = tempDateTime.format();\n      }\n\n      let isValid = false;\n\n      if (value === '' || (isCompleteDateTime && tempDateTime && this.isDateTimeAcceptable(tempDateTime))) {\n        isValid = true;\n      }\n\n      const options = {\n        iSO: iSOString,\n        inputValue: value,\n        isCompleteValue: isCompleteDateTime,\n        isValidValue: isValid,\n      };\n\n      this.props.onBlur(event, options);\n    }\n\n    this.containerHasFocus = false;\n  }\n\n  checkAmbiguousTime(dateTime, onCheckCallback) {\n    // To prevent multiple time clarification dialogs from rendering, ensure that it is not open before checking for the ambiguous hour.\n    // One situation is when using the right arrow key to move focus from the hour input to the minute input, it will invoke onBlur and check for ambiguous hour.\n    // If the hour is ambiguous, the dialog would display and steal focus from the minute input, which again will invoke onBlur and check for ambiguous hour.\n    if (this.state.isTimeClarificationOpen) {\n      return;\n    }\n\n    let isDateTimeAmbiguous = false;\n    const isOldTimeAmbiguous = this.state.isAmbiguousTime;\n    if (dateTime && dateTime.isValid()) {\n      const tempDateTime = dateTime.clone();\n      isDateTimeAmbiguous = DateTimeUtils.checkAmbiguousTime(tempDateTime);\n    }\n\n    this.setState({\n      isAmbiguousTime: isDateTimeAmbiguous,\n      isTimeClarificationOpen: isDateTimeAmbiguous && !isOldTimeAmbiguous,\n    }, onCheckCallback);\n  }\n\n  handleDateChange(event, date) {\n    if (event.type === 'change') {\n      this.dateValue = event.target.value;\n    }\n\n    let updatedDateTime;\n    const formattedDate = DateUtil.formatISODate(date, 'YYYY-MM-DD');\n    const isDateValid = DateUtil.isValidDate(formattedDate, 'YYYY-MM-DD');\n    const isTimeValid = DateTimeUtils.isValidTime(this.timeValue, this.props.showSeconds);\n\n    if (isDateValid) {\n      const previousDateTime = this.state.dateTime ? this.state.dateTime.clone() : DateTimeUtils.createSafeDate(formattedDate);\n      updatedDateTime = DateTimeUtils.syncDateTime(previousDateTime, date, this.timeValue, this.props.showSeconds);\n\n      if (isTimeValid) {\n        // Update the timeValue in case the updatedDateTime falls in the missing hour and needs to bump the hour up.\n        this.timeValue = DateTimeUtils.getTime(updatedDateTime.format(), this.props.showSeconds);\n      }\n    }\n\n    // onChange should only be triggered when both the date and time values are valid or both values are empty/cleared.\n    if ((isDateValid && isTimeValid) || (this.dateValue === '' && this.timeValue === '')) {\n      this.handleChange(event, updatedDateTime);\n    } else {\n      this.setState({ dateTime: updatedDateTime });\n    }\n\n    if (isDateValid) {\n      // Allows time for focus-trap to release focus on the picker before shifting focus to the hour input.\n      setTimeout(() => {\n        this.hourInput.focus();\n      }, 100);\n    }\n  }\n\n  handleDateChangeRaw(event, date) {\n    this.dateValue = event.target.value;\n    this.handleChangeRaw(event, date);\n  }\n\n  handleTimeChange(event, time) {\n    this.timeValue = time;\n    const validDate = DateUtil.isValidDate(this.dateValue, this.state.dateFormat) && this.isDateTimeAcceptable(DateTimeUtils.convertDateTimeStringToMomentObject(this.dateValue, this.timeValue, this.state.dateFormat, this.props.showSeconds));\n    const validTime = DateTimeUtils.isValidTime(this.timeValue, this.props.showSeconds);\n    const previousDateTime = this.state.dateTime ? this.state.dateTime.clone() : null;\n\n    // If both date and time are valid, check if the time is the missing hour and invoke onChange.\n    // If the date is valid but time is invalid, the time in the dateTime state needs to be cleared and render.\n    if (validDate && validTime) {\n      const updatedDateTime = DateTimeUtils.updateTime(previousDateTime, time, this.props.showSeconds);\n\n      if (event.keyCode === KeyCode.KEY_DOWN\n        && previousDateTime && updatedDateTime && previousDateTime.format() === updatedDateTime.format()) {\n        updatedDateTime.subtract(1, 'hours');\n      }\n\n      // If updatedDateTime is valid, update timeValue (value in the time input) to reflect updatedDateTime since\n      // it could have subtracted an hour from above to account for the missing hour.\n      if (updatedDateTime) {\n        this.timeValue = DateTimeUtils.getTime(updatedDateTime.format(), this.props.showSeconds);\n      }\n\n      this.handleChangeRaw(event, this.timeValue);\n      this.handleChange(event, updatedDateTime);\n    } else if (this.dateValue === '' && this.timeValue === '') {\n      this.handleChangeRaw(event, this.timeValue);\n      this.handleChange(event, null);\n    } else {\n      if (!validDate && validTime) {\n        const updatedDateTime = DateTimeUtils.updateTime(previousDateTime, time, this.props.showSeconds);\n\n        this.setState({\n          dateTime: updatedDateTime,\n        });\n      }\n\n      this.handleChangeRaw(event, time);\n    }\n  }\n\n  handleChange(event, newDateTime) {\n    this.setState({\n      dateTime: newDateTime,\n    });\n\n    // If the new time is ambiguous and the old time is not, do not fire onChange.\n    // This allows a user to use TimeClarification before onChange is fired.\n    if (this.props.onChange && (this.state.isAmbiguousTime || !DateTimeUtils.checkAmbiguousTime(newDateTime))) {\n      this.props.onChange(event, newDateTime && newDateTime.isValid() ? newDateTime.format() : '');\n    }\n  }\n\n  handleChangeRaw(event, value) {\n    if (this.props.onChangeRaw) {\n      this.props.onChangeRaw(event, value);\n    }\n  }\n\n  handleOnDateInputFocus(event) {\n    this.handleOnInputFocus(event);\n  }\n\n  handleOnTimeInputFocus(event) {\n    this.handleOnInputFocus(event);\n  }\n\n  handleOnInputFocus(event) {\n    this.handleFocus(event);\n\n    if (!this.isDefaultDateAcceptable) {\n      this.dateValue = '';\n      this.timeValue = '';\n      this.handleChange(event, null);\n      this.isDefaultDateAcceptable = true;\n    }\n  }\n\n  handleFocus(event) {\n    // Handle focus only if focus is gained from outside of the entire date time picker component.\n    // For IE 10/11 we cannot rely on event.relatedTarget since it is always null. Need to also check if containerHasFocus is false to\n    // determine if the date-time picker component did not have focus but will now gain focus.\n    if (this.props.onFocus && !this.containerHasFocus && !this.dateTimePickerContainer.current.contains(event.relatedTarget)) {\n      this.props.onFocus(event);\n      this.containerHasFocus = true;\n    }\n  }\n\n  handleOnCalendarButtonClick(event) {\n    if (!this.isDefaultDateAcceptable && !this.validateDefaultDate()) {\n      this.dateValue = '';\n      this.timeValue = '';\n      this.handleChange(event, null);\n    } else {\n      this.isDefaultDateAcceptable = true;\n    }\n  }\n\n  validateDefaultDate() {\n    return this.isDateTimeAcceptable(this.state.dateTime);\n  }\n\n  isDateTimeAcceptable(newDateTime) {\n    let isAcceptable = true;\n\n    if (DateUtil.isDateOutOfRange(newDateTime, DateTimeUtils.createSafeDate(this.props.minDate), DateTimeUtils.createSafeDate(this.props.maxDate))) {\n      isAcceptable = false;\n    }\n\n    if (DateUtil.isDateExcluded(newDateTime, this.props.excludeDates)) {\n      isAcceptable = false;\n    }\n\n    return isAcceptable;\n  }\n\n  handleDaylightSavingButtonClick(event) {\n    this.setState({ isTimeClarificationOpen: false });\n    const newDateTime = this.state.dateTime.clone();\n\n    if (!newDateTime.isDST()) {\n      newDateTime.subtract(1, 'hour');\n      this.setState({\n        dateTime: newDateTime,\n      });\n      if (this.props.onChange) {\n        this.props.onChange(event, newDateTime && newDateTime.isValid() ? newDateTime.format() : '');\n      }\n    } else if (this.props.onChange && !this.wasOffsetButtonClicked) {\n      // This fires onChange if the TimeClarification dialog was launched without using the OffsetButton.\n      // If the user clicks the OffsetButton, onChange should have already been fired and does not need to be fired\n      // again (unless they change the DateTime).\n      this.props.onChange(event, newDateTime && newDateTime.isValid() ? newDateTime.format() : '');\n    }\n\n    // When the Time Clarification dialog was launched _without_ using the Offset button, 'blur' event\n    // needs to be handled appropriately upon dismissal of the dialog (i.e. after DST resolution).\n    if (!this.wasOffsetButtonClicked) {\n      this.handleBlur(event, newDateTime);\n    }\n\n    this.wasOffsetButtonClicked = false;\n  }\n\n  handleStandardTimeButtonClick(event) {\n    this.setState({ isTimeClarificationOpen: false });\n    const newDateTime = this.state.dateTime.clone();\n\n    if (newDateTime.isDST()) {\n      newDateTime.add(1, 'hour');\n      this.setState({\n        dateTime: newDateTime,\n      });\n      if (this.props.onChange) {\n        this.props.onChange(event, newDateTime && newDateTime.isValid() ? newDateTime.format() : '');\n      }\n    } else if (this.props.onChange && !this.wasOffsetButtonClicked) {\n      // This fires onChange if the TimeClarification dialog was launched without using the OffsetButton.\n      // If the user clicks the OffsetButton, onChange should have already been fired and does not need to be fired\n      // again (unless they change the DateTime).\n      this.props.onChange(event, newDateTime && newDateTime.isValid() ? newDateTime.format() : '');\n    }\n\n    // When the Time Clarification dialog was launched _without_ using the Offset button, 'blur' event\n    // needs to be handled appropriately upon dismissal of the dialog (i.e. after DST resolution).\n    if (!this.wasOffsetButtonClicked) {\n      this.handleBlur(event, newDateTime);\n    }\n\n    this.wasOffsetButtonClicked = false;\n  }\n\n  handleOffsetButtonClick() {\n    this.wasOffsetButtonClicked = true;\n    this.setState(prevState => ({ isTimeClarificationOpen: !prevState.isTimeClarificationOpen }));\n  }\n\n  handleOnRequestClose() {\n    this.setState({ isTimeClarificationOpen: false });\n  }\n\n  renderTimeClarification() {\n    return (\n      <TimeClarification\n        ambiguousDateTime={this.state.dateTime.format()}\n        disabled={this.props.disabled}\n        isOpen={this.state.isTimeClarificationOpen}\n        isOffsetButtonHidden={!this.state.isAmbiguousTime}\n        onDaylightSavingButtonClick={this.handleDaylightSavingButtonClick}\n        onStandardTimeButtonClick={this.handleStandardTimeButtonClick}\n        onOffsetButtonClick={this.handleOffsetButtonClick}\n        onRequestClose={this.handleOnRequestClose}\n        onBlur={this.handleOnTimeBlur}\n        onFocus={this.handleFocus}\n      />\n    );\n  }\n\n  render() {\n    const {\n      dateInputAttributes,\n      disabled,\n      excludeDates,\n      filterDate,\n      includeDates,\n      onBlur,\n      onChange,\n      onChangeRaw,\n      onClickOutside,\n      onFocus,\n      onSelect,\n      maxDate,\n      minDate,\n      name,\n      showSeconds,\n      timeInputAttributes,\n      value,\n      timeVariant,\n      ...customProps\n    } = this.props;\n\n    const dateTime = this.state.dateTime ? this.state.dateTime.clone() : null;\n    const dateValue = DateUtil.formatMomentDate(dateTime, 'YYYY-MM-DD');\n\n    return (\n      <div\n        {...customProps}\n        className={cx('date-time-picker')}\n        ref={this.dateTimePickerContainer}\n      >\n        <input\n          // Create a hidden input for storing the name and value attributes to use when submitting the form.\n          // The data stored in the value attribute will be the visible date in the date input but in ISO 8601 format.\n          data-terra-date-time-input-hidden\n          type=\"hidden\"\n          name={name}\n          value={dateTime && dateTime.isValid() ? dateTime.format() : ''}\n        />\n\n        <DatePicker\n          onCalendarButtonClick={this.handleOnCalendarButtonClick}\n          onChange={this.handleDateChange}\n          onChangeRaw={this.handleDateChangeRaw}\n          onSelect={this.handleOnSelect}\n          onClickOutside={onClickOutside}\n          onBlur={this.handleOnDateBlur}\n          onFocus={this.handleOnDateInputFocus}\n          excludeDates={excludeDates}\n          filterDate={filterDate}\n          includeDates={includeDates}\n          inputAttributes={dateInputAttributes}\n          maxDate={maxDate}\n          minDate={minDate}\n          selectedDate={dateValue}\n          name=\"input\"\n          disabled={disabled}\n          disableButtonFocusOnClose\n        />\n\n        <div className={cx('time-facade')}>\n          <TimeInput\n            onBlur={this.handleOnTimeBlur}\n            onChange={this.handleTimeChange}\n            onFocus={this.handleOnTimeInputFocus}\n            inputAttributes={timeInputAttributes}\n            name=\"input\"\n            value={this.timeValue}\n            disabled={disabled}\n            variant={timeVariant}\n            refCallback={(inputRef) => { this.hourInput = inputRef; }}\n            showSeconds={showSeconds}\n          />\n\n          {this.state.isAmbiguousTime ? this.renderTimeClarification() : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nDateTimePicker.propTypes = propTypes;\nDateTimePicker.defaultProps = defaultProps;\n\nexport default injectIntl(DateTimePicker);\n"},1846:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(2)),c=a(n(339)),p=a(n(964)),f={value:h.default.node},T=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(c.default,{label:"Enter Date/Time",htmlFor:"default"},m.default.createElement(p.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"default"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);T.propTypes=f,T.defaultProps={value:""};var D=T;t.default=D},1849:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"default\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'default' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nexport default DateTimePickerExample;\n"},1850:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"defaultDateTime"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"defaultDateTime"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(){return m.default.createElement(D,{value:(0,h.default)().format()})};t.default=v},1851:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"defaultDateTime\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'defaultDateTime' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleDefaultDateTime = () => (\n  <DateTimePickerExample\n    value={moment().format()}\n  />\n);\n\nexport default DateTimePickerExampleDefaultDateTime;\n"},1852:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(2)),c=a(n(339)),p=a(n(964)),f={value:h.default.node},T=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(c.default,{label:"Enter Date/Time",htmlFor:"defaultDate"},m.default.createElement(p.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"defaultDate"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);T.propTypes=f,T.defaultProps={value:""};var D=function(){return m.default.createElement(T,{value:"2017-08-08"})};t.default=D},1853:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"defaultDate\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'defaultDate' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleDefaultDate = () => (\n  <DateTimePickerExample\n    value=\"2017-08-08\"\n  />\n);\n\nexport default DateTimePickerExampleDefaultDate;\n"},1854:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"exclude-dates"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"exclude-dates"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(){return m.default.createElement(D,{excludeDates:[(0,h.default)().subtract(1,"days").format(),(0,h.default)().add(1,"days").format()]})};t.default=v},1855:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"exclude-dates\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'exclude-dates' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleExcludeDates = () => (\n  <DateTimePickerExample\n    excludeDates={[moment().subtract(1, 'days').format(), moment().add(1, 'days').format()]}\n  />\n);\n\n\nexport default DateTimePickerExampleExcludeDates;\n"},1856:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"include-dates"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"include-dates"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(){return m.default.createElement(D,{includeDates:[(0,h.default)().format(),(0,h.default)().subtract(1,"days").format(),(0,h.default)().add(1,"days").format()]})};t.default=v},1857:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"include-dates\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'include-dates' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleIncludeDates = () => (\n  <DateTimePickerExample\n    includeDates={[moment().format(), moment().subtract(1, 'days').format(), moment().add(1, 'days').format()]}\n  />\n);\n\n\nexport default DateTimePickerExampleIncludeDates;\n"},1858:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"filter-dates"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"filter-dates"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(e){var t=(0,h.default)(e);if(t&&t.isValid()){var n=t.day();return 0!==n&&6!==n}return!0},g=function(){return m.default.createElement(D,{filterDate:v})};t.default=g},1859:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"filter-dates\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'filter-dates' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst isWeekday = (date) => {\n  const momentDate = moment(date);\n\n  if (momentDate && momentDate.isValid()) {\n    const day = momentDate.day();\n    return day !== 0 && day !== 6;\n  }\n\n  return true;\n};\n\nconst DateTimePickerExampleFilterDates = () => (\n  <DateTimePickerExample filterDate={isWeekday} />\n);\n\nexport default DateTimePickerExampleFilterDates;\n"},1860:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"min-max-dates"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"min-max-dates"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(){return m.default.createElement(D,{minDate:(0,h.default)().format(),maxDate:(0,h.default)().add(6,"days").format()})};t.default=v},1861:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"min-max-dates\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'min-max-dates' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleMinMax = () => (\n  <DateTimePickerExample\n    minDate={moment().format()}\n    maxDate={moment().add(6, 'days').format()}\n  />\n);\n\nexport default DateTimePickerExampleMinMax;\n"},1862:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"dst-picker"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"dst-picker"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(){return m.default.createElement(D,{value:(0,h.default)().format()})};t.default=v},1863:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"dst-picker\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'dst-picker' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleDST = () => (\n  <DateTimePickerExample\n    value={moment().format()}\n  />\n);\n\nexport default DateTimePickerExampleDST;\n"},1864:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T=a(n(963)),D={value:c.default.node},v=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"defaultDate"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"defaultDate"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);v.propTypes=D,v.defaultProps={value:""};var g=function(){return m.default.createElement(v,{value:(0,h.default)().format(),timeInputAttributes:{id:"time-input-example"},timeVariant:T.default.FORMAT_12_HOUR})};t.default=g},1865:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\nimport DateTimeUtil from 'terra-date-time-picker/lib/DateTimeUtils';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"defaultDate\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'defaultDate' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerTimeAttributes = () => (\n  <DateTimePickerExample\n    value={moment().format()}\n    timeInputAttributes={{ id: 'time-input-example' }}\n    timeVariant={DateTimeUtil.FORMAT_12_HOUR}\n  />\n);\n\nexport default DateTimePickerTimeAttributes;\n"},1866:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T={value:c.default.node},D=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"defaultDateTime"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"defaultDateTime"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);D.propTypes=T,D.defaultProps={value:""};var v=function(){return m.default.createElement(D,{value:(0,h.default)().format(),showSeconds:!0})};t.default=v},1867:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"defaultDateTime\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'defaultDateTime' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleDefaultDateTime = () => (\n  <DateTimePickerExample\n    value={moment().format()}\n    showSeconds\n  />\n);\n\nexport default DateTimePickerExampleDefaultDateTime;\n"},1868:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(18)),s=a(n(22)),l=a(n(23)),r=a(n(24)),u=a(n(25)),o=a(n(29)),d=a(n(26)),m=a(n(0)),h=a(n(960)),c=a(n(2)),p=a(n(339)),f=a(n(964)),T=a(n(963)),D={value:c.default.node},v=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,u.default)(t).call(this,e))).state={dateTime:n.props.value},n.handleDateTimeChange=n.handleDateTimeChange.bind((0,o.default)(n)),n}return(0,d.default)(t,e),(0,l.default)(t,[{key:"handleDateTimeChange",value:function(e,t){this.setState({dateTime:t})}},{key:"render",value:function(){return m.default.createElement("div",null,m.default.createElement("p",null,"Selected ISO Date Time:",this.state.dateTime),m.default.createElement(p.default,{label:"Enter Date/Time",htmlFor:"defaultDateTime"},m.default.createElement(f.default,(0,i.default)({name:"date-time-picker-example",dateInputAttributes:{id:"defaultDateTime"},onChange:this.handleDateTimeChange},this.props))))}}]),t}(m.default.Component);v.propTypes=D,v.defaultProps={value:""};var g=function(){return m.default.createElement(v,{value:(0,h.default)().format(),showSeconds:!0,timeVariant:T.default.FORMAT_12_HOUR})};t.default=g},1869:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport Field from 'terra-form-field';\nimport DateTimePicker from 'terra-date-time-picker';\nimport DateTimeUtil from 'terra-date-time-picker/lib/DateTimeUtils';\n\nconst propTypes = {\n  /**\n   * The current entered date time. Use for the selected date message.\n   */\n  value: PropTypes.node,\n};\n\nconst defaultProps = {\n  value: '',\n};\n\nclass DateTimePickerExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { dateTime: this.props.value };\n    this.handleDateTimeChange = this.handleDateTimeChange.bind(this);\n  }\n\n  handleDateTimeChange(event, dateTime) {\n    this.setState({ dateTime });\n  }\n\n  render() {\n    return (\n      <div>\n        <p>\n          Selected ISO Date Time:\n          {this.state.dateTime}\n        </p>\n        <Field label=\"Enter Date/Time\" htmlFor=\"defaultDateTime\">\n          <DateTimePicker\n            name=\"date-time-picker-example\"\n            dateInputAttributes={{ id: 'defaultDateTime' }}\n            onChange={this.handleDateTimeChange}\n            {...this.props}\n          />\n        </Field>\n      </div>\n    );\n  }\n}\n\nDateTimePickerExample.propTypes = propTypes;\nDateTimePickerExample.defaultProps = defaultProps;\n\nconst DateTimePickerExampleDefaultDateTime = () => (\n  <DateTimePickerExample\n    value={moment().format()}\n    showSeconds\n    timeVariant={DateTimeUtil.FORMAT_12_HOUR}\n  />\n);\n\nexport default DateTimePickerExampleDefaultDateTime;\n"},2269:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(0)),s=a(n(961)),l=a(n(1844)),r=n(1348),u=a(n(1845)),o=a(n(1846)),d=a(n(1849)),m=a(n(1850)),h=a(n(1851)),c=a(n(1852)),p=a(n(1853)),f=a(n(1854)),T=a(n(1855)),D=a(n(1856)),v=a(n(1857)),g=a(n(1858)),b=a(n(1859)),C=a(n(1860)),k=a(n(1861)),y=a(n(1862)),S=a(n(1863)),O=a(n(1864)),_=a(n(1865)),E=a(n(1866)),F=a(n(1867)),I=a(n(1868)),w=a(n(1869)),P=function(){return i.default.createElement(s.default,{packageName:r.name,readme:l.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(r.name),examples:[{title:"Default",example:i.default.createElement(o.default,null),source:d.default},{title:"Default Date Time",example:i.default.createElement(m.default,null),source:h.default},{title:"Default Date Only",example:i.default.createElement(c.default,null),source:p.default},{title:"Exclude Dates",example:i.default.createElement(f.default,null),source:T.default},{title:"Include Dates",example:i.default.createElement(D.default,null),source:v.default},{title:"Filter Dates",example:i.default.createElement(g.default,null),source:b.default},{title:"Min Max Selection Options",example:i.default.createElement(C.default,null),source:k.default},{title:"Daylight Saving",description:i.default.createElement("div",null,i.default.createElement("p",null,"In the United States, the missing hour occurs when DST begins at these recent past and near future dates between 2:00 and 3:00.",i.default.createElement("br",null)," ","- March 13th, 2016",i.default.createElement("br",null)," ","- March 12th, 2017",i.default.createElement("br",null)," ","- March 11th, 2018",i.default.createElement("br",null)," ","- March 10th, 2019",i.default.createElement("br",null)," ","- March 08th, 2020"),i.default.createElement("p",null,"In the United States, the ambiguous hour occurs when DST ends at these recent past and near future dates between 1:00 and 2:00:",i.default.createElement("br",null)," ","- November 6th, 2016",i.default.createElement("br",null)," ","- November 5th, 2017",i.default.createElement("br",null)," ","- November 4th, 2018",i.default.createElement("br",null)," ","- November 3rd, 2019",i.default.createElement("br",null)," ","- November 1st, 2020"),i.default.createElement("p",null,"For the United States, click"," ",i.default.createElement("a",{href:"https://en.wikipedia.org/wiki/Daylight_saving_time_in_the_United_States"},"here")," ","to see more recent past and near future starting and ending dates of daylight saving time.",i.default.createElement("br",null),"For other time zones, click"," ",i.default.createElement("a",{href:"http://www.timezoneconverter.com/cgi-bin/zoneinfo"},"here")," ","to see the starting and ending dates of daylight saving time for the current year.")),example:i.default.createElement(y.default,null),source:S.default},{title:"Time Variant with 12-hour Time format",example:i.default.createElement(O.default,null),source:_.default},{title:"With Seconds Field",example:i.default.createElement(E.default,null),source:F.default},{title:"With Seconds Field in 12-hour Time format",example:i.default.createElement(I.default,null),source:w.default}],propsTables:[{componentName:"Date Time Picker",componentSrc:u.default}]})};t.default=P},962:function(e,t){},963:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(22)),s=a(n(23)),l=a(n(990)),r=a(n(966)),u=a(n(975)),o=function(){function e(){(0,i.default)(this,e)}return(0,s.default)(e,null,[{key:"hasTime",value:function(t){if(!e.createSafeDate(t))return!1;var n="";return t.indexOf(" ")>0&&(n=t.split(" ")[1]),t.indexOf("T")>0&&(n=t.split("T")[1]),n.length>0}},{key:"syncDateTime",value:function(t,n,a,i){var s=(0,l.default)(n);if(t&&t.isValid()){var r=t.clone();return s.isValid()&&r.year(s.get("year")).month(s.get("month")).date(s.get("date")),a&&(!i&&5===a.length||i&&8===a.length)&&(r=e.updateTime(r,a,i)),r}if(s.isValid()){var u=s.clone();return a&&(!i&&5===a.length||i&&8===a.length)&&(u=e.updateTime(u,a,i)),u}return t}},{key:"updateTime",value:function(e,t,n){if(!e||!e.isValid())return null;var a=e.clone(),i=n?"HH:mm:ss":"HH:mm",s=(0,l.default)(t,i,!0);return n?a.hour(s.get("hour")).minute(s.get("minute")).second(s.get("second")):a.hour(s.get("hour")).minute(s.get("minute"))}},{key:"getTime",value:function(e,t){var n=t?"HH:mm:ss":"HH:mm";return r.default.formatISODate(e,n)}},{key:"isValidDateTime",value:function(t,n,a,i){return r.default.isValidDate(t,a)&&e.isValidTime(n,i)}},{key:"isValidTime",value:function(e,t){var n=t?"HH:mm:ss":"HH:mm";return(0,l.default)(e,n,!0).isValid()}},{key:"checkAmbiguousTime",value:function(e){if(!e||!e.isValid())return!1;var t=l.default.tz(e.format(),l.default.tz.guess()),n=t.clone(),a=t.clone();n.add(1,"hour"),a.subtract(1,"hour");var i=t.isDST()&&!n.isDST(),s=!t.isDST()&&a.isDST();return i||s}},{key:"getDaylightSavingTZDisplay",value:function(e){var t=(0,l.default)(e);return t.isValid()?(t.subtract(1,"days"),t.tz(l.default.tz.guess()).format("z")):""}},{key:"getDaylightSavingExpandedTZDisplay",value:function(e){var t=(0,l.default)(e);if(!t.isValid())return"";t.subtract(1,"days");var n=l.default.tz.guess(),a=t.tz(n);return l.default.tz.zone(n).name+a.format(" z Z")}},{key:"getStandardTZDisplay",value:function(e){var t=(0,l.default)(e);return t.isValid()?(t.add(1,"days"),t.tz(l.default.tz.guess()).format("z")):""}},{key:"getStandardExpandedTZDisplay",value:function(e){var t=(0,l.default)(e);if(!t.isValid())return"";t.add(1,"days");var n=l.default.tz.guess(),a=t.tz(n);return l.default.tz.zone(n).name+a.format(" z Z")}},{key:"convertDateTimeStringToMomentObject",value:function(t,n,a,i){return e.updateTime(e.createSafeDate(r.default.convertToISO8601(t,a)),n,i)}},{key:"createSafeDate",value:function(e){if(e){var t=(0,l.default)(e);return t.isValid()?t:void 0}}}]),e}();o.FORMAT_12_HOUR=u.default.FORMAT_12_HOUR,o.FORMAT_24_HOUR=u.default.FORMAT_24_HOUR;var d=o;t.default=d},964:function(e,t,n){"use strict";var a=n(19),i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=i(n(18)),l=i(n(32)),r=i(n(22)),u=i(n(23)),o=i(n(24)),d=i(n(25)),m=i(n(29)),h=i(n(26)),c=i(n(0)),p=n(7),f=i(n(2)),T=i(n(4)),D=i(n(967)),v=i(n(972)),g=a(n(15)),b=i(n(966)),C=i(n(968)),k=i(n(963)),y=i(n(969)),S=T.default.bind(C.default),O={dateInputAttributes:f.default.object,disabled:f.default.bool,excludeDates:f.default.arrayOf(f.default.string),filterDate:f.default.func,includeDates:f.default.arrayOf(f.default.string),intl:p.intlShape.isRequired,maxDate:f.default.string,minDate:f.default.string,name:f.default.string.isRequired,onBlur:f.default.func,onChange:f.default.func,onChangeRaw:f.default.func,onClickOutside:f.default.func,onFocus:f.default.func,onSelect:f.default.func,showSeconds:f.default.bool,timeInputAttributes:f.default.object,value:f.default.string,timeVariant:f.default.oneOf([k.default.FORMAT_12_HOUR,k.default.FORMAT_24_HOUR])},_={dateInputAttributes:void 0,disabled:!1,excludeDates:void 0,filterDate:void 0,includeDates:void 0,maxDate:void 0,minDate:void 0,onBlur:void 0,onChange:void 0,onChangeRaw:void 0,onClickOutside:void 0,onFocus:void 0,onSelect:void 0,showSeconds:!1,timeInputAttributes:void 0,value:void 0,timeVariant:k.default.FORMAT_24_HOUR},E=function(e){function t(e){var n;return(0,r.default)(this,t),(n=(0,o.default)(this,(0,d.default)(t).call(this,e))).state={dateTime:k.default.createSafeDate(e.value),isAmbiguousTime:!1,isTimeClarificationOpen:!1,dateFormat:b.default.getFormatByLocale(e.intl.locale),prevPropsValue:e.value},n.dateValue=b.default.formatMomentDate(n.state.dateTime,n.state.dateFormat)||"",n.timeValue=k.default.hasTime(n.props.value)?k.default.getTime(n.props.value,n.props.showSeconds):"",n.isDefaultDateTimeAcceptable=!0,n.wasOffsetButtonClicked=!1,n.handleDateChange=n.handleDateChange.bind((0,m.default)(n)),n.handleDateChangeRaw=n.handleDateChangeRaw.bind((0,m.default)(n)),n.handleTimeChange=n.handleTimeChange.bind((0,m.default)(n)),n.handleOnSelect=n.handleOnSelect.bind((0,m.default)(n)),n.handleOnDateBlur=n.handleOnDateBlur.bind((0,m.default)(n)),n.handleOnTimeBlur=n.handleOnTimeBlur.bind((0,m.default)(n)),n.handleBlur=n.handleBlur.bind((0,m.default)(n)),n.handleDaylightSavingButtonClick=n.handleDaylightSavingButtonClick.bind((0,m.default)(n)),n.handleStandardTimeButtonClick=n.handleStandardTimeButtonClick.bind((0,m.default)(n)),n.handleOnDateInputFocus=n.handleOnDateInputFocus.bind((0,m.default)(n)),n.handleOnTimeInputFocus=n.handleOnTimeInputFocus.bind((0,m.default)(n)),n.handleFocus=n.handleFocus.bind((0,m.default)(n)),n.handleOnCalendarButtonClick=n.handleOnCalendarButtonClick.bind((0,m.default)(n)),n.handleOffsetButtonClick=n.handleOffsetButtonClick.bind((0,m.default)(n)),n.handleOnRequestClose=n.handleOnRequestClose.bind((0,m.default)(n)),n.dateTimePickerContainer=c.default.createRef(),n.containerHasFocus=!1,n}return(0,h.default)(t,e),(0,u.default)(t,[{key:"componentDidMount",value:function(){this.isDefaultDateAcceptable=this.validateDefaultDate()}},{key:"handleOnSelect",value:function(e,t){this.dateValue=b.default.formatISODate(t,this.state.dateFormat);var n=this.state.dateTime?this.state.dateTime.clone():null,a=k.default.syncDateTime(n,t,this.timeValue,this.props.showSeconds);n&&n.format()===a.format()||this.checkAmbiguousTime(a),this.props.onSelect&&this.props.onSelect(e,a.format())}},{key:"handleOnDateBlur",value:function(e){var t=this,n=e.relatedTarget?e.relatedTarget:document.activeElement;if(!this.dateTimePickerContainer.current.contains(n)){var a=k.default.isValidDateTime(this.dateValue,this.timeValue,this.state.dateFormat,this.props.showSeconds)?this.state.dateTime:null;this.checkAmbiguousTime(a,(function(){t.state.isAmbiguousTime&&t.state.isTimeClarificationOpen||t.handleBlur(e,t.state.dateTime)}))}}},{key:"handleOnTimeBlur",value:function(e){var t,n=this,a=e.relatedTarget?e.relatedTarget:document.activeElement;this.dateTimePickerContainer.current.contains(a)||(k.default.isValidDateTime(this.dateValue,this.timeValue,this.state.dateFormat,this.props.showSeconds)&&(t=k.default.updateTime(this.state.dateTime,this.timeValue,this.props.showSeconds)),this.checkAmbiguousTime(t,(function(){n.state.isAmbiguousTime&&n.state.isTimeClarificationOpen||n.handleBlur(e,n.state.dateTime)})))}},{key:"handleBlur",value:function(e,t){if(this.props.onBlur){var n=k.default.isValidDateTime(this.dateValue,this.timeValue,this.state.dateFormat,this.props.showSeconds),a="";this.dateValue&&(a=this.dateValue.concat(" ")),this.timeValue&&(a=a.concat(this.timeValue)),a=a.trim();var i=t?t.clone():null,s="";n&&i&&(s=i.format());var l=!1;(""===a||n&&i&&this.isDateTimeAcceptable(i))&&(l=!0);var r={iSO:s,inputValue:a,isCompleteValue:n,isValidValue:l};this.props.onBlur(e,r)}this.containerHasFocus=!1}},{key:"checkAmbiguousTime",value:function(e,t){if(!this.state.isTimeClarificationOpen){var n=!1,a=this.state.isAmbiguousTime;if(e&&e.isValid()){var i=e.clone();n=k.default.checkAmbiguousTime(i)}this.setState({isAmbiguousTime:n,isTimeClarificationOpen:n&&!a},t)}}},{key:"handleDateChange",value:function(e,t){var n,a=this;"change"===e.type&&(this.dateValue=e.target.value);var i=b.default.formatISODate(t,"YYYY-MM-DD"),s=b.default.isValidDate(i,"YYYY-MM-DD"),l=k.default.isValidTime(this.timeValue,this.props.showSeconds);if(s){var r=this.state.dateTime?this.state.dateTime.clone():k.default.createSafeDate(i);n=k.default.syncDateTime(r,t,this.timeValue,this.props.showSeconds),l&&(this.timeValue=k.default.getTime(n.format(),this.props.showSeconds))}s&&l||""===this.dateValue&&""===this.timeValue?this.handleChange(e,n):this.setState({dateTime:n}),s&&setTimeout((function(){a.hourInput.focus()}),100)}},{key:"handleDateChangeRaw",value:function(e,t){this.dateValue=e.target.value,this.handleChangeRaw(e,t)}},{key:"handleTimeChange",value:function(e,t){this.timeValue=t;var n=b.default.isValidDate(this.dateValue,this.state.dateFormat)&&this.isDateTimeAcceptable(k.default.convertDateTimeStringToMomentObject(this.dateValue,this.timeValue,this.state.dateFormat,this.props.showSeconds)),a=k.default.isValidTime(this.timeValue,this.props.showSeconds),i=this.state.dateTime?this.state.dateTime.clone():null;if(n&&a){var s=k.default.updateTime(i,t,this.props.showSeconds);e.keyCode===g.KEY_DOWN&&i&&s&&i.format()===s.format()&&s.subtract(1,"hours"),s&&(this.timeValue=k.default.getTime(s.format(),this.props.showSeconds)),this.handleChangeRaw(e,this.timeValue),this.handleChange(e,s)}else if(""===this.dateValue&&""===this.timeValue)this.handleChangeRaw(e,this.timeValue),this.handleChange(e,null);else{if(!n&&a){var l=k.default.updateTime(i,t,this.props.showSeconds);this.setState({dateTime:l})}this.handleChangeRaw(e,t)}}},{key:"handleChange",value:function(e,t){this.setState({dateTime:t}),!this.props.onChange||!this.state.isAmbiguousTime&&k.default.checkAmbiguousTime(t)||this.props.onChange(e,t&&t.isValid()?t.format():"")}},{key:"handleChangeRaw",value:function(e,t){this.props.onChangeRaw&&this.props.onChangeRaw(e,t)}},{key:"handleOnDateInputFocus",value:function(e){this.handleOnInputFocus(e)}},{key:"handleOnTimeInputFocus",value:function(e){this.handleOnInputFocus(e)}},{key:"handleOnInputFocus",value:function(e){this.handleFocus(e),this.isDefaultDateAcceptable||(this.dateValue="",this.timeValue="",this.handleChange(e,null),this.isDefaultDateAcceptable=!0)}},{key:"handleFocus",value:function(e){!this.props.onFocus||this.containerHasFocus||this.dateTimePickerContainer.current.contains(e.relatedTarget)||(this.props.onFocus(e),this.containerHasFocus=!0)}},{key:"handleOnCalendarButtonClick",value:function(e){this.isDefaultDateAcceptable||this.validateDefaultDate()?this.isDefaultDateAcceptable=!0:(this.dateValue="",this.timeValue="",this.handleChange(e,null))}},{key:"validateDefaultDate",value:function(){return this.isDateTimeAcceptable(this.state.dateTime)}},{key:"isDateTimeAcceptable",value:function(e){var t=!0;return b.default.isDateOutOfRange(e,k.default.createSafeDate(this.props.minDate),k.default.createSafeDate(this.props.maxDate))&&(t=!1),b.default.isDateExcluded(e,this.props.excludeDates)&&(t=!1),t}},{key:"handleDaylightSavingButtonClick",value:function(e){this.setState({isTimeClarificationOpen:!1});var t=this.state.dateTime.clone();t.isDST()?this.props.onChange&&!this.wasOffsetButtonClicked&&this.props.onChange(e,t&&t.isValid()?t.format():""):(t.subtract(1,"hour"),this.setState({dateTime:t}),this.props.onChange&&this.props.onChange(e,t&&t.isValid()?t.format():"")),this.wasOffsetButtonClicked||this.handleBlur(e,t),this.wasOffsetButtonClicked=!1}},{key:"handleStandardTimeButtonClick",value:function(e){this.setState({isTimeClarificationOpen:!1});var t=this.state.dateTime.clone();t.isDST()?(t.add(1,"hour"),this.setState({dateTime:t}),this.props.onChange&&this.props.onChange(e,t&&t.isValid()?t.format():"")):this.props.onChange&&!this.wasOffsetButtonClicked&&this.props.onChange(e,t&&t.isValid()?t.format():""),this.wasOffsetButtonClicked||this.handleBlur(e,t),this.wasOffsetButtonClicked=!1}},{key:"handleOffsetButtonClick",value:function(){this.wasOffsetButtonClicked=!0,this.setState((function(e){return{isTimeClarificationOpen:!e.isTimeClarificationOpen}}))}},{key:"handleOnRequestClose",value:function(){this.setState({isTimeClarificationOpen:!1})}},{key:"renderTimeClarification",value:function(){return c.default.createElement(y.default,{ambiguousDateTime:this.state.dateTime.format(),disabled:this.props.disabled,isOpen:this.state.isTimeClarificationOpen,isOffsetButtonHidden:!this.state.isAmbiguousTime,onDaylightSavingButtonClick:this.handleDaylightSavingButtonClick,onStandardTimeButtonClick:this.handleStandardTimeButtonClick,onOffsetButtonClick:this.handleOffsetButtonClick,onRequestClose:this.handleOnRequestClose,onBlur:this.handleOnTimeBlur,onFocus:this.handleFocus})}},{key:"render",value:function(){var e=this,t=this.props,n=t.dateInputAttributes,a=t.disabled,i=t.excludeDates,r=t.filterDate,u=t.includeDates,o=(t.onBlur,t.onChange,t.onChangeRaw,t.onClickOutside),d=(t.onFocus,t.onSelect,t.maxDate),m=t.minDate,h=t.name,p=t.showSeconds,f=t.timeInputAttributes,T=(t.value,t.timeVariant),g=(0,l.default)(t,["dateInputAttributes","disabled","excludeDates","filterDate","includeDates","onBlur","onChange","onChangeRaw","onClickOutside","onFocus","onSelect","maxDate","minDate","name","showSeconds","timeInputAttributes","value","timeVariant"]),C=this.state.dateTime?this.state.dateTime.clone():null,k=b.default.formatMomentDate(C,"YYYY-MM-DD");return c.default.createElement("div",(0,s.default)({},g,{className:S("date-time-picker"),ref:this.dateTimePickerContainer}),c.default.createElement("input",{"data-terra-date-time-input-hidden":!0,type:"hidden",name:h,value:C&&C.isValid()?C.format():""}),c.default.createElement(D.default,{onCalendarButtonClick:this.handleOnCalendarButtonClick,onChange:this.handleDateChange,onChangeRaw:this.handleDateChangeRaw,onSelect:this.handleOnSelect,onClickOutside:o,onBlur:this.handleOnDateBlur,onFocus:this.handleOnDateInputFocus,excludeDates:i,filterDate:r,includeDates:u,inputAttributes:n,maxDate:d,minDate:m,selectedDate:k,name:"input",disabled:a,disableButtonFocusOnClose:!0}),c.default.createElement("div",{className:S("time-facade")},c.default.createElement(v.default,{onBlur:this.handleOnTimeBlur,onChange:this.handleTimeChange,onFocus:this.handleOnTimeInputFocus,inputAttributes:f,name:"input",value:this.timeValue,disabled:a,variant:T,refCallback:function(t){e.hourInput=t},showSeconds:p}),this.state.isAmbiguousTime?this.renderTimeClarification():null))}}],[{key:"getDerivedStateFromProps",value:function(e,t){return e.value!==t.prevPropsValue?{dateTime:k.default.createSafeDate(e.value),prevPropsValue:e.value}:null}}]),t}(c.default.Component);E.propTypes=O,E.defaultProps=_;var F=(0,p.injectIntl)(E);t.default=F},968:function(e,t,n){e.exports={"date-time-picker":"DateTimePicker-module__date-time-picker___1FFVZ","time-facade":"DateTimePicker-module__time-facade___RbC0N"}},969:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(22)),s=a(n(23)),l=a(n(24)),r=a(n(25)),u=a(n(29)),o=a(n(26)),d=a(n(0)),m=a(n(2)),h=a(n(4)),c=a(n(337)),p=a(n(54)),f=n(7),T=a(n(963)),D=a(n(970)),v=h.default.bind(D.default),g={ambiguousDateTime:m.default.string,intl:f.intlShape.isRequired,isOpen:m.default.bool.isRequired,isOffsetButtonHidden:m.default.bool.isRequired,onBlur:m.default.func,onDaylightSavingButtonClick:m.default.func.isRequired,onFocus:m.default.func,onStandardTimeButtonClick:m.default.func.isRequired,onOffsetButtonClick:m.default.func.isRequired,onRequestClose:m.default.func.isRequired,disabled:m.default.bool},b=function(e){function t(e){var n;return(0,i.default)(this,t),(n=(0,l.default)(this,(0,r.default)(t).call(this,e))).state={offsetDisplay:"",offsetLongDisplay:""},n.handleDaylightSavingButtonClick=n.handleDaylightSavingButtonClick.bind((0,u.default)(n)),n.handleStandardTimeButtonClick=n.handleStandardTimeButtonClick.bind((0,u.default)(n)),n}return(0,o.default)(t,e),(0,s.default)(t,[{key:"handleDaylightSavingButtonClick",value:function(e){this.setState({offsetDisplay:T.default.getDaylightSavingTZDisplay(this.props.ambiguousDateTime),offsetLongDisplay:T.default.getDaylightSavingExpandedTZDisplay(this.props.ambiguousDateTime)}),this.props.onDaylightSavingButtonClick&&this.props.onDaylightSavingButtonClick(e)}},{key:"handleStandardTimeButtonClick",value:function(e){this.setState({offsetDisplay:T.default.getStandardTZDisplay(this.props.ambiguousDateTime),offsetLongDisplay:T.default.getStandardExpandedTZDisplay(this.props.ambiguousDateTime)}),this.props.onStandardTimeButtonClick&&this.props.onStandardTimeButtonClick(e)}},{key:"render",value:function(){this.props.isOffsetButtonHidden&&(this.state.offsetDisplay="");var e=v(["button-offset",{"button-offset-hidden":this.props.isOffsetButtonHidden||!this.state.offsetDisplay}]),t=this.props.intl,n=t.formatMessage({id:"Terra.dateTimePicker.timeClarification.title"}),a=t.formatMessage({id:"Terra.dateTimePicker.timeClarification.message"}),i=t.formatMessage({id:"Terra.dateTimePicker.timeClarification.button.daylightSaving"}),s=t.formatMessage({id:"Terra.dateTimePicker.timeClarification.button.standardTime"});return d.default.createElement("div",null,d.default.createElement(c.default,{classNameModal:v("time-clarification"),ariaLabel:"Time Clarification",isOpen:this.props.isOpen,onRequestClose:this.props.onRequestClose,closeOnEsc:!1,closeOnOutsideClick:!1,zIndex:"9000"},d.default.createElement("div",null,d.default.createElement("header",{className:v("header")},d.default.createElement("h1",{className:v("title")},n)),d.default.createElement("div",{className:v("body")},d.default.createElement("p",null,a)),d.default.createElement("div",{className:v("buttons")},d.default.createElement(p.default,{text:i,onClick:this.handleDaylightSavingButtonClick,variant:p.default.Opts.Variants.EMPHASIS,className:v("button-daylight")}),d.default.createElement(p.default,{text:s,onClick:this.handleStandardTimeButtonClick,variant:p.default.Opts.Variants.EMPHASIS,className:v("button-standard")})))),d.default.createElement(p.default,{title:this.state.offsetLongDisplay,"aria-label":this.state.offsetLongDisplay,className:e,onBlur:this.props.onBlur,onFocus:this.props.onFocus,onClick:this.props.onOffsetButtonClick,text:this.state.offsetDisplay,isCompact:!0,isDisabled:this.props.disabled}))}}]),t}(d.default.Component);b.propTypes=g,b.defaultProps={disabled:!1};var C=(0,f.injectIntl)(b);t.default=C},970:function(e,t,n){e.exports={"time-clarification":"_TimeClarification-module__time-clarification___2vA9t",header:"_TimeClarification-module__header___3D6Ii",title:"_TimeClarification-module__title___3kdiR",body:"_TimeClarification-module__body___fI43Y",buttons:"_TimeClarification-module__buttons___7-8FL","button-daylight":"_TimeClarification-module__button-daylight___2STLa","button-standard":"_TimeClarification-module__button-standard___3pcMQ","button-offset":"_TimeClarification-module__button-offset___3Iw0u","button-offset-hidden":"_TimeClarification-module__button-offset-hidden___2S_dI"}},972:function(e,t,n){"use strict";(function(e){var a=n(19),i=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var s=i(n(18)),l=i(n(211)),r=i(n(32)),u=i(n(22)),o=i(n(23)),d=i(n(24)),m=i(n(25)),h=i(n(29)),c=i(n(26)),p=i(n(0)),f=i(n(2)),T=i(n(4)),D=i(n(347)),v=i(n(352)),g=n(7),b=a(n(15)),C=i(n(975)),k=i(n(1132));function y(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function S(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?y(n,!0).forEach((function(t){(0,l.default)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):y(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var O=T.default.bind(k.default),_={disabled:f.default.bool,inputAttributes:f.default.object,hourAttributes:f.default.object,intl:g.intlShape.isRequired,minuteAttributes:f.default.object,name:f.default.string.isRequired,onBlur:f.default.func,onChange:f.default.func,onFocus:f.default.func,refCallback:f.default.func,secondAttributes:f.default.object,showSeconds:f.default.bool,value:f.default.string,variant:f.default.oneOf([C.default.FORMAT_12_HOUR,C.default.FORMAT_24_HOUR])},E={disabled:!1,inputAttributes:{},minuteAttributes:{},hourAttributes:{},onBlur:null,onChange:null,onFocus:void 0,refCallback:void 0,secondAttributes:{},showSeconds:!1,value:void 0,variant:C.default.FORMAT_24_HOUR},F=function(t){function n(t){var a;(0,u.default)(this,n);var i=(a=(0,d.default)(this,(0,m.default)(n).call(this,t))).props.value,s=a.props.showSeconds;i&&!C.default.validateTime(i,s)&&("production"!==e.env&&console.warn("An invalid time value, ".concat(i,", has been passed to the terra-time-picker. ")+"This value has been ignored and will not be rendered. "+"Time values must be in ".concat(s?"hh:mm:ss":"hh:mm"," format because showSeconds is ").concat(s,".")),i=void 0),a.timeInputContainer=p.default.createRef(),a.handleHourChange=a.handleHourChange.bind((0,h.default)(a)),a.handleMinuteChange=a.handleMinuteChange.bind((0,h.default)(a)),a.handleSecondChange=a.handleSecondChange.bind((0,h.default)(a)),a.handleHourInputKeyDown=a.handleHourInputKeyDown.bind((0,h.default)(a)),a.handleMinuteInputKeyDown=a.handleMinuteInputKeyDown.bind((0,h.default)(a)),a.handleSecondInputKeyDown=a.handleSecondInputKeyDown.bind((0,h.default)(a)),a.handleFocus=a.handleFocus.bind((0,h.default)(a)),a.handleHourFocus=a.handleHourFocus.bind((0,h.default)(a)),a.handleMinuteFocus=a.handleMinuteFocus.bind((0,h.default)(a)),a.handleSecondFocus=a.handleSecondFocus.bind((0,h.default)(a)),a.handleHourBlur=a.handleHourBlur.bind((0,h.default)(a)),a.handleMinuteBlur=a.handleMinuteBlur.bind((0,h.default)(a)),a.handleSecondBlur=a.handleSecondBlur.bind((0,h.default)(a)),a.handleMeridiemBlur=a.handleMeridiemBlur.bind((0,h.default)(a)),a.handleMeridiemChange=a.handleMeridiemChange.bind((0,h.default)(a)),a.handleMeridiemInputKeyDown=a.handleMeridiemInputKeyDown.bind((0,h.default)(a)),a.handleMeridiemInputFocus=a.handleMeridiemInputFocus.bind((0,h.default)(a)),a.handleMeridiemSelectFocus=a.handleMeridiemSelectFocus.bind((0,h.default)(a)),a.handleMeridiemButtonChange=a.handleMeridiemButtonChange.bind((0,h.default)(a));var l,r=C.default.splitHour(i);if(C.default.getVariantFromLocale(t)===C.default.FORMAT_12_HOUR)if(a.props.intl.messages["Terra.timeInput.am"]&&a.props.intl.messages["Terra.timeInput.pm"]?(a.anteMeridiem=a.props.intl.formatMessage({id:"Terra.timeInput.am"}),a.postMeridiem=a.props.intl.formatMessage({id:"Terra.timeInput.pm"})):("production"!==e.env&&console.warn("This locale only uses 24 hour clock. The ante meridiem and post meridiem will not be displayed"),a.anteMeridiem="",a.postMeridiem=""),r){var o=C.default.parseTwelveHourTime(r,a.anteMeridiem,a.postMeridiem);r=o.hourString,l=o.meridiem}else l=a.anteMeridiem;return a.state={hour:r,minute:C.default.splitMinute(i),second:C.default.splitSecond(i),isFocused:!1,meridiem:l,hourInitialFocused:!1,minuteInitialFocused:!1,secondInitialFocused:!1,meridiemFocused:!1},a}return(0,c.default)(n,t),(0,o.default)(n,[{key:"componentDidUpdate",value:function(e){var t=C.default.getVariantFromLocale(this.props);if(this.props.value!==e.value||t!==C.default.getVariantFromLocale(e)){var n=C.default.splitHour(this.props.value),a=this.state.meridiem;if(t===C.default.FORMAT_12_HOUR&&(this.anteMeridiem=this.props.intl.formatMessage({id:"Terra.timeInput.am"}),this.postMeridiem=this.props.intl.formatMessage({id:"Terra.timeInput.pm"}),n)){var i=C.default.parseTwelveHourTime(n,this.anteMeridiem,this.postMeridiem);n=i.hourString,a=i.meridiem}this.setState({hour:n,minute:C.default.splitMinute(this.props.value),second:C.default.splitSecond(this.props.value),meridiem:a})}}},{key:"handleFocus",value:function(e){this.props.onFocus&&!this.timeInputContainer.current.contains(e.relatedTarget)&&this.props.onFocus(e),this.setState({isFocused:!0})}},{key:"handleSecondFocus",value:function(e){this.handleFocus(e),this.setState({secondInitialFocused:!0}),this.secondInput.setSelectionRange(0,this.secondInput.value.length)}},{key:"handleMinuteFocus",value:function(e){this.handleFocus(e),this.setState({minuteInitialFocused:!0}),this.minuteInput.setSelectionRange(0,this.minuteInput.value.length)}},{key:"handleHourFocus",value:function(e){this.handleFocus(e),this.setState({hourInitialFocused:!0}),this.hourInput.setSelectionRange(0,this.hourInput.value.length)}},{key:"handleHourBlur",value:function(e){this.handleBlur(e,C.default.inputType.HOUR),this.setState({hourInitialFocused:!1})}},{key:"handleMinuteBlur",value:function(e){this.handleBlur(e,C.default.inputType.MINUTE),this.setState({minuteInitialFocused:!1})}},{key:"handleSecondBlur",value:function(e){this.handleBlur(e,C.default.inputType.SECOND),this.setState({secondInitialFocused:!1})}},{key:"handleMeridiemBlur",value:function(e){this.handleBlur(e,C.default.inputType.MERIDIEM),this.setState({meridiemFocused:!1})}},{key:"handleBlur",value:function(e,t){if(this.setState({isFocused:!1}),t===C.default.inputType.HOUR||t===C.default.inputType.MINUTE||t===C.default.inputType.SECOND){var n=e.target.value;1===n.length&&(n=C.default.getVariantFromLocale(this.props)===C.default.FORMAT_12_HOUR&&t===C.default.inputType.HOUR&&"0"===n?"12":"0".concat(n),this.handleValueChange(e,t,n,this.state.meridiem))}if(this.props.onBlur){var a=e.relatedTarget?e.relatedTarget:document.activeElement;this.timeInputContainer.current.contains(a)||this.props.onBlur(e)}}},{key:"handleHourChange",value:function(e){var t=this;if(C.default.validNumericInput(e.target.value)){var n=e.target.value,a=this.state.hour,i=C.default.getVariantFromLocale(this.props),s=i===C.default.FORMAT_12_HOUR?12:23;if(!(n===a||n.length>2||Number(n)>s)){if(n.length>=a.length){var l=["3","4","5","6","7","8","9"];i===C.default.FORMAT_12_HOUR&&l.push("2"),l.indexOf(n)>-1&&(n="0".concat(n))}"00"===n&&i===C.default.FORMAT_12_HOUR&&(n="12");this.handleValueChange(e,C.default.inputType.HOUR,n,this.state.meridiem,(function(){2===n.length&&t.minuteInput.focus()}))}}}},{key:"handleMinuteChange",value:function(e){var t=this;if(C.default.validNumericInput(e.target.value)){var n=e.target.value,a=this.state.minute;if(!(n===a||n.length>2||Number(n)>59)){if(n.length>=a.length){["6","7","8","9"].indexOf(n)>-1&&(n="0".concat(n))}this.handleValueChange(e,C.default.inputType.MINUTE,n,this.state.meridiem,(function(){2===n.length&&(t.props.showSeconds?t.secondInput.focus():C.default.getVariantFromLocale(t.props)===C.default.FORMAT_12_HOUR&&t.meridiemSelect&&t.meridiemSelect.focus())}))}}}},{key:"handleSecondChange",value:function(e){var t=this;if(C.default.validNumericInput(e.target.value)){var n=e.target.value,a=this.state.second;if(!(n===a||n.length>2||Number(n)>59)){if(n.length>=a.length){["6","7","8","9"].indexOf(n)>-1&&(n="0".concat(n))}this.handleValueChange(e,C.default.inputType.SECOND,n,this.state.meridiem,(function(){C.default.getVariantFromLocale(t.props)===C.default.FORMAT_12_HOUR&&2===n.length&&t.meridiemSelect&&t.meridiemSelect.focus()}))}}}},{key:"handleMeridiemChange",value:function(e){this.setState({meridiem:e.target.value}),this.handleValueChange(e,C.default.inputType.HOUR,this.state.hour.toString(),e.target.value)}},{key:"handleMeridiemInputFocus",value:function(e){this.meridiemSelect.focus(),this.props.onFocus&&!this.timeInputContainer.current.contains(e.relatedTarget)&&this.props.onFocus(e)}},{key:"handleMeridiemSelectFocus",value:function(){this.setState({isFocused:!0,meridiemFocused:!0})}},{key:"handleHourInputKeyDown",value:function(e){var t=this.state.hour,n=this.state.meridiem,a=t,i=C.default.getVariantFromLocale(this.props);e.keyCode===b.KEY_UP&&(t=C.default.incrementHour(t,i),i===C.default.FORMAT_12_HOUR&&"12"===t&&(n=n!==this.postMeridiem&&a?this.postMeridiem:this.anteMeridiem)),e.keyCode===b.KEY_DOWN&&(t=C.default.decrementHour(t,i),i===C.default.FORMAT_12_HOUR&&"11"===t&&(n=n===this.postMeridiem?this.anteMeridiem:this.postMeridiem)),t!==a&&this.handleValueChange(e,C.default.inputType.HOUR,t,n),e.keyCode===b.KEY_RIGHT&&this.focusMinuteFromHour(e)}},{key:"focusMinuteFromHour",value:function(e){0!==this.state.hour.length&&this.state.hour.length!==this.hourInput.selectionEnd||(this.minuteInput.focus(),this.minuteInput.setSelectionRange(0,0),e.preventDefault())}},{key:"handleMinuteInputKeyDown",value:function(e){var t=this.state.minute,n=t;e.keyCode===b.KEY_UP&&(t=C.default.incrementMinute(t)),e.keyCode===b.KEY_DOWN&&(t=C.default.decrementMinute(t)),n!==t&&this.handleValueChange(e,C.default.inputType.MINUTE,t,this.state.meridiem),e.keyCode!==b.KEY_LEFT&&e.keyCode!==b.KEY_DELETE&&e.keyCode!==b.KEY_BACK_SPACE||this.focusHour(e),e.keyCode===b.KEY_RIGHT&&(this.props.showSeconds?this.focusSecondFromMinute(e):this.focusMeridiemFromMinute(e))}},{key:"focusHour",value:function(e){0===this.minuteInput.selectionEnd&&(this.hourInput.focus(),this.state.hour&&(this.hourInput.setSelectionRange(this.state.hour.length,this.state.hour.length),e.preventDefault()))}},{key:"focusMeridiemFromMinute",value:function(e){0!==this.state.minute.length&&this.state.minute.length!==this.minuteInput.selectionEnd||!this.meridiemSelect||(this.meridiemSelect.focus(),e.preventDefault())}},{key:"focusSecondFromMinute",value:function(e){0!==this.state.minute.length&&this.state.minute.length!==this.minuteInput.selectionEnd||!this.secondInput||(this.secondInput.focus(),this.state.second&&(this.secondInput.setSelectionRange(0,0),e.preventDefault()))}},{key:"handleSecondInputKeyDown",value:function(e){var t=this.state.second,n=t;e.keyCode===b.KEY_UP&&(t=C.default.incrementSecond(t)),e.keyCode===b.KEY_DOWN&&(t=C.default.decrementSecond(t)),n!==t&&this.handleValueChange(e,C.default.inputType.SECOND,t,this.state.meridiem),e.keyCode!==b.KEY_LEFT&&e.keyCode!==b.KEY_DELETE&&e.keyCode!==b.KEY_BACK_SPACE||this.focusMinuteFromSecond(e),e.keyCode===b.KEY_RIGHT&&this.focusMeridiemFromSecond(e)}},{key:"focusMinuteFromSecond",value:function(e){0===this.secondInput.selectionEnd&&(this.minuteInput.focus(),this.state.minute&&(this.minuteInput.setSelectionRange(this.state.minute.length,this.state.minute.length),e.preventDefault()))}},{key:"focusMeridiemFromSecond",value:function(e){0!==this.state.second.length&&this.state.second.length!==this.secondInput.selectionEnd||!this.meridiemSelect||(this.meridiemSelect.focus(),e.preventDefault())}},{key:"handleValueChange",value:function(e,t,n,a,i){if(t===C.default.inputType.HOUR?this.setState({hour:n,meridiem:a,hourInitialFocused:!1},i):t===C.default.inputType.MINUTE?this.setState({minute:n,minuteInitialFocused:!1},i):this.setState({second:n,secondInitialFocused:!1},i),this.props.onChange&&1!==n.length){var s=t===C.default.inputType.HOUR?n:this.state.hour,l=t===C.default.inputType.MINUTE?n:this.state.minute,r=t===C.default.inputType.SECOND?n:this.state.second;""===s&&""===l&&""===r?this.props.onChange(e,""):this.props.onChange(e,this.formatHour(s,a).concat(":",l).concat(this.props.showSeconds?":".concat(r):""))}}},{key:"formatHour",value:function(e,t){if(!e)return e;var n=parseInt(e,10);C.default.getVariantFromLocale(this.props)===C.default.FORMAT_12_HOUR&&(t===this.postMeridiem&&n<12?n+=12:t===this.anteMeridiem&&12===n&&(n=0));var a=n.toString();return a.length<2&&(a="0".concat(a)),a}},{key:"handleMeridiemInputKeyDown",value:function(e){e.keyCode!==b.KEY_LEFT&&e.keyCode!==b.KEY_DELETE&&e.keyCode!==b.KEY_BACK_SPACE||(this.props.showSeconds?(this.secondInput.focus(),this.state.second&&this.secondInput.setSelectionRange(this.state.second.length,this.state.second.length)):(this.minuteInput.focus(),this.state.minute&&this.minuteInput.setSelectionRange(this.state.minute.length,this.state.minute.length)),e.preventDefault())}},{key:"mobileInput",value:function(){var e=this,t=this.props,n=t.disabled,a=t.inputAttributes,i=t.minuteAttributes,l=t.hourAttributes,u=t.intl,o=(t.onBlur,t.onChange,t.onFocus,t.name),d=t.refCallback,m=t.secondAttributes,h=t.showSeconds,c=(t.value,t.variant,(0,r.default)(t,["disabled","inputAttributes","minuteAttributes","hourAttributes","intl","onBlur","onChange","onFocus","name","refCallback","secondAttributes","showSeconds","value","variant"])),f=S({},l),T=S({},i),g=S({},m),b=C.default.getVariantFromLocale(this.props),k="";if(this.state.hour.length>0||this.state.minute.length>0||this.state.second.length>0){var y=parseInt(this.state.hour,10);b===C.default.FORMAT_12_HOUR&&this.state.meridiem===this.postMeridiem&&y>12&&(y+=12),k="T".concat(y,":",this.state.minute).concat(h?":".concat(this.state.second):"")}return f.id||(f.id="terra-time-hour-".concat(o)),T.id||(T.id="terra-time-minute-".concat(o)),g.id||(g.id="terra-time-second-".concat(o)),p.default.createElement("div",(0,s.default)({},c,{className:O(["mobile-time-picker",c.className]),ref:this.timeInputContainer}),p.default.createElement("input",{type:"hidden",name:o,value:k}),p.default.createElement("div",{className:O("time-input-group")},p.default.createElement(D.default,(0,s.default)({},a,f,{refCallback:function(t){e.hourInput=t,d&&d(t)},className:O("time-input-hour"),value:this.state.hour,name:"terra-time-hour-".concat(o),placeholder:u.formatMessage({id:"Terra.timeInput.hh"}),maxLength:"2",onChange:this.handleHourChange,onKeyDown:this.handleHourInputKeyDown,onFocus:this.handleFocus,onBlur:this.handleHourBlur,size:"2",pattern:"\\d*",disabled:n})),p.default.createElement("label",{htmlFor:f.id,className:O("mobile-input-label")},u.formatMessage({id:"Terra.timeInput.hours"}))),p.default.createElement("span",{className:O("time-spacer")},":"),p.default.createElement("div",{className:O("time-input-group")},p.default.createElement(D.default,(0,s.default)({},a,T,{refCallback:function(t){e.minuteInput=t},className:O("time-input-minute",h?"with-second":"without-second"),value:this.state.minute,name:"terra-time-minute-".concat(o),placeholder:u.formatMessage({id:"Terra.timeInput.mm"}),maxLength:"2",onChange:this.handleMinuteChange,onKeyDown:this.handleMinuteInputKeyDown,onFocus:this.handleFocus,onBlur:this.handleMinuteBlur,size:"2",pattern:"\\d*",disabled:n})),p.default.createElement("label",{htmlFor:T.id,className:O("mobile-input-label")},u.formatMessage({id:"Terra.timeInput.minutes"}))),h&&p.default.createElement(p.default.Fragment,null,p.default.createElement("span",{className:O("time-spacer")},":"),p.default.createElement("div",{className:O("time-input-group")},p.default.createElement(D.default,(0,s.default)({},a,g,{refCallback:function(t){e.secondInput=t},className:O("time-input-second"),value:this.state.second,name:"terra-time-second-".concat(o),placeholder:u.formatMessage({id:"Terra.timeInput.ss"}),maxLength:"2",onChange:this.handleSecondChange,onKeyDown:this.handleSecondInputKeyDown,onFocus:this.handleFocus,onBlur:this.handleSecondBlur,size:"2",pattern:"\\d*",disabled:n})),p.default.createElement("label",{htmlFor:g.id,className:O("mobile-input-label")},u.formatMessage({id:"Terra.timeInput.seconds"})))),b===C.default.FORMAT_12_HOUR&&p.default.createElement(v.default,{selectedKeys:[this.state.meridiem],onChange:this.handleMeridiemButtonChange,className:O("meridiem-button-group")},p.default.createElement(v.default.Button,{key:this.anteMeridiem,className:O("meridiem-button"),text:this.anteMeridiem,onBlur:this.handleMeridiemBlur,onFocus:this.handleFocus,isDisabled:n}),p.default.createElement(v.default.Button,{key:this.postMeridiem,className:O("meridiem-button"),text:this.postMeridiem,onBlur:this.handleMeridiemBlur,onFocus:this.handleFocus,isDisabled:n})))}},{key:"handleMeridiemButtonChange",value:function(e,t){this.handleValueChange(e,C.default.inputType.HOUR,this.state.hour.toString(),t)}},{key:"desktopInput",value:function(){var e=this,t=this.props,n=t.disabled,a=t.inputAttributes,i=t.minuteAttributes,l=(t.hourAttributes,t.intl),u=(t.onBlur,t.onChange,t.onFocus,t.name),o=t.refCallback,d=t.secondAttributes,m=t.showSeconds,h=(t.value,t.variant,(0,r.default)(t,["disabled","inputAttributes","minuteAttributes","hourAttributes","intl","onBlur","onChange","onFocus","name","refCallback","secondAttributes","showSeconds","value","variant"])),c=C.default.getVariantFromLocale(this.props),f=O([{disabled:n},"time-input",{"is-focused":this.state.isFocused},h.className]),T="";if(this.state.hour.length>0||this.state.minute.length>0||this.state.second.length>0&&m){var v=parseInt(this.state.hour,10);c===C.default.FORMAT_12_HOUR&&this.state.meridiem===this.postMeridiem&&(v+=12),T="T".concat(v,":",this.state.minute),m&&(T=T.concat(":",this.state.second))}return p.default.createElement("div",(0,s.default)({},h,{className:f,ref:this.timeInputContainer}),p.default.createElement("input",{type:"hidden",name:u,value:T}),p.default.createElement(D.default,(0,s.default)({},a,i,{"aria-label":l.formatMessage({id:"Terra.timeInput.hours"}),refCallback:function(t){e.hourInput=t,o&&o(t)},className:O("time-input-hour","desktop",{"initial-focus":this.state.hourInitialFocused}),type:"text",value:this.state.hour,name:"terra-time-hour-".concat(u),placeholder:l.formatMessage({id:"Terra.timeInput.hh"}),maxLength:"2",onChange:this.handleHourChange,onKeyDown:this.handleHourInputKeyDown,onFocus:this.handleHourFocus,onBlur:this.handleHourBlur,size:"2",pattern:"\\d*",disabled:n})),p.default.createElement("span",{className:O("time-spacer")},":"),p.default.createElement(D.default,(0,s.default)({},a,i,{refCallback:function(t){e.minuteInput=t},"aria-label":l.formatMessage({id:"Terra.timeInput.minutes"}),className:O("time-input-minute",m?"with-second":"without-second","desktop",{"initial-focus":this.state.minuteInitialFocused}),type:"text",value:this.state.minute,name:"terra-time-minute-".concat(u),placeholder:l.formatMessage({id:"Terra.timeInput.mm"}),maxLength:"2",onChange:this.handleMinuteChange,onKeyDown:this.handleMinuteInputKeyDown,onFocus:this.handleMinuteFocus,onBlur:this.handleMinuteBlur,size:"2",pattern:"\\d*",disabled:n})),m&&p.default.createElement(p.default.Fragment,null,p.default.createElement("span",{className:O("time-spacer")},":"),p.default.createElement(D.default,(0,s.default)({},a,d,{refCallback:function(t){e.secondInput=t},"aria-label":l.formatMessage({id:"Terra.timeInput.seconds"}),className:O("time-input-second","desktop",{"initial-focus":this.state.secondInitialFocused}),type:"text",value:this.state.second,name:"terra-time-second-".concat(u),placeholder:l.formatMessage({id:"Terra.timeInput.ss"}),maxLength:"2",onChange:this.handleSecondChange,onKeyDown:this.handleSecondInputKeyDown,onFocus:this.handleSecondFocus,onBlur:this.handleSecondBlur,size:"2",pattern:"\\d*",disabled:n}))),c===C.default.FORMAT_12_HOUR&&[p.default.createElement(D.default,(0,s.default)({},a,{"aria-label":l.formatMessage({id:"Terra.timeInput.display.meridiem"}),"aria-readonly":!0,className:O(["meridiem-display",{focused:this.state.meridiemFocused}]),onFocus:this.handleMeridiemInputFocus,key:"meridiem_display",tabIndex:"-1",value:this.state.meridiem,size:this.state.meridiem.length||1,readOnly:!0,disabled:n})),p.default.createElement("div",{className:O("meridiem-select-wrapper"),key:"meridiem_select_box"},p.default.createElement("select",{"aria-label":l.formatMessage({id:"Terra.timeInput.select.meridiem"}),ref:function(t){e.meridiemSelect=t},onBlur:this.handleMeridiemBlur,onFocus:this.handleMeridiemSelectFocus,name:"terra-time-meridiem-".concat(u),value:this.state.meridiem,className:O("time-input-meridiem"),onChange:this.handleMeridiemChange,onKeyDown:this.handleMeridiemInputKeyDown,size:"2"},p.default.createElement("option",{key:"anteMeridiem",value:this.anteMeridiem},this.anteMeridiem),p.default.createElement("option",{key:"postMeridiem",value:this.postMeridiem},this.postMeridiem)))])}},{key:"render",value:function(){return C.default.isConsideredMobileDevice()?this.mobileInput():this.desktopInput()}}]),n}(p.default.Component);F.propTypes=_,F.defaultProps=E;var I=(0,g.injectIntl)(F);t.default=I}).call(this,n(336))},975:function(e,t,n){"use strict";var a=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var i=a(n(22)),s=a(n(23)),l=function(){function e(){(0,i.default)(this,e)}return(0,s.default)(e,null,[{key:"validNumericInput",value:function(e){return 0===e.length||/^\d+$/.test(e)}},{key:"parseTwelveHourTime",value:function(e,t,n){var a={hourString:e},i=parseInt(e,10);return i>=12?(a.meridiem=n,i>12&&(i-=12)):(a.meridiem=t,0===i&&(i=12)),a.hourString=i<10?"0".concat(i.toString()):i.toString(),a}},{key:"incrementHour",value:function(e,t){var n=t===this.FORMAT_12_HOUR?12:23;if(e){var a=Number(e);return a<n?(a+=1)<10?"0".concat(a.toString()):a.toString():t===this.FORMAT_12_HOUR?"01":e}return t===this.FORMAT_12_HOUR?"12":"00"}},{key:"decrementHour",value:function(e,t){var n=t===this.FORMAT_12_HOUR?1:0;if(e){var a=Number(e);return a>n?(a-=1)<10?"0".concat(a.toString()):a.toString():t===this.FORMAT_12_HOUR?"12":e}return t===this.FORMAT_12_HOUR?"12":"00"}},{key:"incrementMinute",value:function(e){if(e){var t=Number(e);return t<59?(t+=1)<10?"0".concat(t.toString()):t.toString():e}return"00"}},{key:"decrementMinute",value:function(e){if(e){var t=Number(e);return t>0?(t-=1)<10?"0".concat(t.toString()):t.toString():e}return"00"}},{key:"incrementSecond",value:function(e){if(e){var t=Number(e);return t<59?(t+=1)<10?"0".concat(t.toString()):t.toString():e}return"00"}},{key:"decrementSecond",value:function(e){if(e){var t=Number(e);return t>0?(t-=1)<10?"0".concat(t.toString()):t.toString():e}return"00"}},{key:"splitHour",value:function(e){if("string"==typeof e){var t=e.split(":");if(t.length){var n=Number(t[0]);if(n>=0&&n<24)return 1===t[0].length?"0".concat(t[0]):t[0]}return""}return""}},{key:"splitMinute",value:function(e){if("string"==typeof e){var t=e.split(":");if(t.length>1){var n=Number(t[1]);if(n>=0&&n<60)return 1===t[1].length?"0".concat(t[1]):t[1]}return""}return""}},{key:"splitSecond",value:function(e){if("string"==typeof e){var t=e.split(":");if(t.length>2){var n=Number(t[2]);if(n>=0&&n<60)return 1===t[2].length?"0".concat(t[2]):t[2]}return""}return""}},{key:"validateTime",value:function(e,t){return t?/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/.test(e):/^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/.test(e)}},{key:"getVariantFromLocale",value:function(e){var t=e.intl,n=e.variant;return t.messages["Terra.timeInput.am"]&&t.messages["Terra.timeInput.pm"]?n:this.FORMAT_24_HOUR}}]),e}();l.inputType={HOUR:0,MINUTE:1,MERIDIEM:2,SECOND:3},l.isConsideredMobileDevice=function(){return window.matchMedia("(max-width: 1024px)").matches&&("ontouchstart"in window||window.DocumentTouch&&document instanceof DocumentTouch||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0)},Object.defineProperty(l,"FORMAT_12_HOUR",{value:"12-hour",configurable:!1,enumerable:!0,writable:!1}),Object.defineProperty(l,"FORMAT_24_HOUR",{value:"24-hour",configurable:!1,enumerable:!0,writable:!1});var r=l;t.default=r}}]);
//# sourceMappingURL=63-23c9a4d8550e2bff3f59.js.map