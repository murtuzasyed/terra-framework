(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{1003:function(e,t,n){e.exports={placeholder:"Placeholder-module__placeholder___37I0I",inner:"Placeholder-module__inner___2DX7N","is-light":"Placeholder-module__is-light___3__YD","is-dark":"Placeholder-module__is-dark___9wQwQ"}},1288:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(22)),i=o(n(23)),s=o(n(24)),r=o(n(25)),l=o(n(29)),u=o(n(26)),d=o(n(0)),p=o(n(54)),c=o(n(2)),h=o(n(127)),f=o(n(982)),m={attachmentBehavior:c.default.string,contentAttachment:c.default.string,isArrowDisplayed:c.default.bool,title:c.default.string},g=function(e){function t(e){var n;return(0,a.default)(this,t),(n=(0,s.default)(this,(0,r.default)(t).call(this,e))).handleButtonClick=n.handleButtonClick.bind((0,l.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,l.default)(n)),n.setButtonNode=n.setButtonNode.bind((0,l.default)(n)),n.getButtonNode=n.getButtonNode.bind((0,l.default)(n)),n.state={open:!1},n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"setButtonNode",value:function(e){this.parentNode=e}},{key:"getButtonNode",value:function(){return this.parentNode}},{key:"handleButtonClick",value:function(){this.setState({open:!0})}},{key:"handleRequestClose",value:function(){this.setState({open:!1})}},{key:"render",value:function(){var e=this.props,t=e.attachmentBehavior,n=e.contentAttachment,o=e.isArrowDisplayed,a=e.title;return d.default.createElement(d.default.Fragment,null,d.default.createElement(h.default,{attachmentBehavior:t,contentAttachment:n,isArrowDisplayed:o,isOpen:this.state.open,targetRef:this.getButtonNode,onRequestClose:this.handleRequestClose},d.default.createElement(f.default,{title:"Popup Content"})),d.default.createElement(p.default,{text:a,onClick:this.handleButtonClick,refCallback:this.setButtonNode}))}}]),t}(d.default.Component);g.propTypes=m,g.defaultProps={attachmentBehavior:"auto",contentAttachment:"top center",isArrowDisplayed:!0,title:""};var P=g;t.default=P},1370:function(e){e.exports=JSON.parse('{"name":"terra-popup","main":"lib/Popup.js","version":"6.14.0","description":"The Terra Popup is higher order component that launches terra-hookshot positioned content with the ability to display a dynamic arrow.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-framework.git"},"keywords":["Cerner","Terra","terra-popup","Popup","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-framework/issues"},"homepage":"https://github.com/cerner/terra-framework#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","focus-trap-react":"^6.0.0","prop-types":"^15.5.8","react-portal":"^4.1.2","terra-button":"^3.3.0","terra-content-container":"^3.0.0","terra-hookshot":"^5.19.0","terra-mixins":"^1.0.0"},"devDependencies":{"terra-disclosure-manager":"^4.23.0","terra-doc-template":"^2.2.0","terra-modal-manager":"^6.14.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},1480:function(e,t,n){e.exports={"content-wrapper":"PopupDocCommon-module__content-wrapper___3O80r"}},2095:function(e,t,n){"use strict";n.r(t),t.default="# Terra Popup\n\nThe Terra Popup is higher order component that launches [terra-hookshot][1] positioned content with the ability to display a dynamic arrow.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-popup`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| react-intl | ^2.8.0 |\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Usage\n\n### Implementation Notes:\n\n#### Default Open Popups\nWhen attempting to present a popup that is open by default you will need to allow for the target element and/or bounding element to be mounted in order to retrieve the ref for positioning and/or bounding. While this isn't the optimal pattern, as it will force a double render, you can force an update in componentDidMount.\n```jsx\nclass ExampleElementWithPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.setButtonNode = this.setButtonNode.bind(this);\n    this.getButtonNode = this.getButtonNode.bind(this);\n    this.state = { open: true };\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n```\n\n#### Stateless Target Elements\nAs stateless react elements do not return a ref, but may be desired targets for a popup to attach to, additional code is required to retreive the elements ref. If a ref callback has not been plumbed through in the elements implementation there are a few options:\n\n#### Use a selector to retrieve your ref. The weakness of this option is that you need to ensure your selector is unique, so it's not advisiable in components that are reused on the same page.\n\n```jsx\n  const getButtonNode = () => {\n    return document.getElementById('my-popup-button');\n  }\n\n.\n.\n.\n\n  render() {\n    return (\n      <div>\n        <Button id=\"my-popup-button\" />\n        <Popup\n          targetRef={getButtonNode}\n```\n#### Wrap the element in span or div. The weakness of this option is that you need to ensure the wrapping div fits the content, while still styled correctly on the page.\n\n```jsx\n  getButtonNode() {\n    return this.buttonNode;\n  }\n\n  setButtonNode(node) {\n    this.buttonNode = node;\n  }\n\n  render() {\n    return (\n      <div>\n        <span ref={this.setButtonNode}>\n          <Button />\n        </span>\n        <Popup\n          targetRef={this.getButtonNode}\n```\n\n#### Rendering a popup using automatic sizing\nWhen setting either the contentHeight or contentWidth to 'auto' the popup will layout to the size of the content. If the content is larger than the set bounding area it will be resized to fit the bounding area, and the content will be decorated with the props isHeightBounded/isWidthBounded in order to allow the content to respond to the resized state. Automatic sized popups will reposition if the inner content resizes, though animated size changes are heavily discouraged and not fully supported; as performance is severly impacted even in the best conditions with capable hardware.\n\n[1]: https://engineering.cerner.com/terra-ui/#/components/terra-hookshot/hookshot/hookshot\n"},2096:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport Hookshot from 'terra-hookshot';\nimport { Portal } from 'react-portal';\nimport PopupContent, { cornerSize } from './_PopupContent';\nimport PopupArrow from './_PopupArrow';\nimport PopupOverlay from './_PopupOverlay';\nimport PopupUtils from './_PopupUtils';\nimport PopupHeights from './PopupHeights';\nimport PopupWidths from './PopupWidths';\n\nconst ATTACHMENT_POSITIONS = [\n  'top left',\n  'top center',\n  'top right',\n  'middle left',\n  'middle center',\n  'middle right',\n  'bottom left',\n  'bottom center',\n  'bottom right',\n];\n\nconst propTypes = {\n  /**\n   * If the primary attachment is not available, how should the content be positioned. Options\n   * include 'auto', 'flip', or 'push'.\n   */\n  attachmentBehavior: PropTypes.oneOf(['auto', 'flip', 'push']),\n  /**\n   * The children to be displayed as content within the popup.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Callback function indicating a close condition was met, should be combined with isOpen for state management.\n   */\n  onRequestClose: PropTypes.func.isRequired,\n  /**\n   * Target element for the popup to anchor to.\n   */\n  targetRef: PropTypes.func.isRequired,\n  /**\n   * Bounding container for the popup, will use window if no value provided.\n   */\n  boundingRef: PropTypes.func,\n  /**\n   * @private CSS classnames that are append to the arrow.\n   */\n  classNameArrow: PropTypes.string,\n  /**\n   * @private CSS classnames that are append to the popup content inner.\n   */\n  classNameContent: PropTypes.string,\n  /**\n   * @private CSS classnames that are append to the overlay.\n   */\n  classNameOverlay: PropTypes.string,\n  /**\n   * Attachment point for the popup, this will be mirrored to the target. Options include: 'top left',\n   * 'top center', 'top right', 'middle left', 'middle center', 'middle right', 'bottom left',\n   * 'bottom center', or 'bottom right'.\n   */\n  contentAttachment: PropTypes.oneOf(ATTACHMENT_POSITIONS),\n  /**\n   * A string representation of the height in px, limited to:\n   * 40, 80, 120, 160, 240, 320, 400, 480, 560, 640, 720, 800, 880 or auto.\n   */\n  contentHeight: PropTypes.oneOf(Object.keys(PopupHeights)),\n  /**\n   * A string representation of the width in px, limited to:\n   * 160, 240, 320, 640, 960, 1280, 1760 or auto.\n   */\n  contentWidth: PropTypes.oneOf(Object.keys(PopupWidths)),\n  /**\n   * Should an arrow be placed at the attachment point.\n   */\n  isArrowDisplayed: PropTypes.bool,\n  /**\n   * Set this to `true` if your content has focusable elements and you want them to receive focus instead of focusing on the default popup frame when the popup is opened.\n   */\n  isContentFocusDisabled: PropTypes.bool,\n  /**\n   * Should the default behavior, that inserts a header when constraints are breached, be disabled.\n   */\n  isHeaderDisabled: PropTypes.bool,\n  /**\n   * Should the popup be presented as open.\n   */\n  isOpen: PropTypes.bool,\n  /**\n   * Attachment point for the target. Options include: 'top left', 'top center', 'top right', 'middle left', 'middle center',\n   * 'middle right', 'bottom left', 'bottom center', or 'bottom right'.\n   */\n  targetAttachment: PropTypes.oneOf(ATTACHMENT_POSITIONS),\n  /**\n   * @private\n   * Prop to set role on popup content container\n   */\n  popupContentRole: PropTypes.string,\n};\n\nconst defaultProps = {\n  attachmentBehavior: 'auto',\n  boundingRef: null,\n  classNameArrow: null,\n  classNameContent: null,\n  classNameOverlay: null,\n  contentAttachment: 'top center',\n  contentHeight: '80',\n  contentWidth: '240',\n  isArrowDisplayed: false,\n  isContentFocusDisabled: false,\n  isHeaderDisabled: false,\n  isOpen: false,\n  popupContentRole: 'dialog',\n};\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleOnPosition = this.handleOnPosition.bind(this);\n    this.setArrowNode = this.setArrowNode.bind(this);\n    this.validateContentNode = this.validateContentNode.bind(this);\n    this.handleOnResize = this.handleOnResize.bind(this);\n    this.handleOnContentResize = this.handleOnContentResize.bind(this);\n    this.isContentSized = props.contentHeight !== 'auto' && props.contentWidth !== 'auto';\n    this.contentHeight = PopupHeights[props.contentHeight];\n    this.contentWidth = PopupWidths[props.contentWidth];\n  }\n\n  shouldComponentUpdate(nextProps) {\n    this.isContentSized = nextProps.contentHeight !== 'auto' && nextProps.contentWidth !== 'auto';\n    this.contentHeight = PopupHeights[nextProps.contentHeight];\n    this.contentWidth = PopupWidths[nextProps.contentWidth];\n    return true;\n  }\n\n  setArrowPosition(contentPosition, targetPosition) {\n    const arrowPosition = PopupUtils.getArrowPosition(contentPosition, targetPosition, PopupArrow.Opts.arrowSize, cornerSize);\n    if (!arrowPosition) {\n      this.arrowNode.removeAttribute(PopupArrow.Opts.positionAttr);\n      return;\n    }\n    this.arrowNode.setAttribute(PopupArrow.Opts.positionAttr, arrowPosition);\n\n    if (arrowPosition === 'top' || arrowPosition === 'bottom') {\n      this.arrowNode.style.left = PopupUtils.leftOffset(contentPosition, targetPosition, PopupArrow.Opts.arrowSize, cornerSize);\n      this.arrowNode.style.top = '';\n    } else {\n      this.arrowNode.style.left = '';\n      this.arrowNode.style.top = PopupUtils.topOffset(contentPosition, targetPosition, PopupArrow.Opts.arrowSize, cornerSize);\n    }\n  }\n\n  setArrowNode(node) {\n    this.arrowNode = node;\n  }\n\n  handleOnPosition(event, positions) {\n    if (this.arrowNode) {\n      this.setArrowPosition(positions.content, positions.target);\n    }\n  }\n\n  handleOnContentResize() {\n    this.isContentSized = this.props.contentHeight !== 'auto' && this.props.contentWidth !== 'auto';\n    this.contentHeight = PopupHeights[this.props.contentHeight];\n    this.contentWidth = PopupWidths[this.props.contentWidth];\n    this.forceUpdate();\n  }\n\n  handleOnResize(event, width) {\n    // Close the popup if the window width is resized.\n    if (window.innerWidth !== width) {\n      this.windowWidth = window.innerWidth;\n      this.props.onRequestClose();\n    } else {\n      this.isContentSized = this.props.contentHeight !== 'auto' && this.props.contentWidth !== 'auto';\n      this.contentHeight = PopupHeights[this.props.contentHeight];\n      this.contentWidth = PopupWidths[this.props.contentWidth];\n      this.forceUpdate();\n    }\n  }\n\n  validateContentNode(node) {\n    if (node) {\n      const contentRect = Hookshot.Utils.getBounds(node);\n      if (this.contentHeight !== contentRect.height || this.contentWidth !== contentRect.width) {\n        this.contentHeight = contentRect.height;\n        this.contentWidth = contentRect.width;\n        this.forceUpdate();\n      }\n      this.isContentSized = true;\n    }\n  }\n\n  createPopupContent(boundingFrame, showArrow) {\n    const boundsProps = {\n      contentHeight: PopupHeights[this.props.contentHeight] || PopupHeights['80'],\n      contentWidth: PopupWidths[this.props.contentWidth] || PopupWidths['240'],\n    };\n    if (boundsProps.contentHeight <= 0 && this.contentHeight) {\n      boundsProps.contentHeight = this.contentHeight;\n    }\n    if (boundsProps.contentWidth <= 0 && this.contentWidth) {\n      boundsProps.contentWidth = this.contentWidth;\n    }\n\n    if (boundingFrame) {\n      boundsProps.contentHeightMax = boundingFrame.clientHeight;\n      boundsProps.contentWidthMax = boundingFrame.clientWidth;\n    } else {\n      boundsProps.contentHeightMax = window.innerHeight;\n      boundsProps.contentWidthMax = window.innerWidth;\n    }\n\n    let arrow;\n    if (showArrow) {\n      arrow = <PopupArrow className={this.props.classNameArrow} refCallback={this.setArrowNode} />;\n    }\n\n    return (\n      <PopupContent\n        {...boundsProps}\n        arrow={arrow}\n        classNameInner={this.props.classNameContent}\n        isHeaderDisabled={this.props.isHeaderDisabled}\n        onRequestClose={this.props.onRequestClose}\n        onContentResize={this.handleOnContentResize}\n        onResize={this.handleOnResize}\n        popupContentRole={this.props.popupContentRole}\n        refCallback={this.validateContentNode}\n        isHeightAutomatic={this.props.contentHeight === 'auto'}\n        isWidthAutomatic={this.props.contentWidth === 'auto'}\n        isFocusedDisabled={this.props.isContentFocusDisabled}\n      >\n        {this.props.children}\n      </PopupContent>\n    );\n  }\n\n  render() {\n    /* eslint-disable no-unused-vars */\n    const {\n      attachmentBehavior,\n      boundingRef,\n      children,\n      classNameArrow,\n      classNameContent,\n      classNameOverlay,\n      contentAttachment,\n      contentHeight,\n      contentWidth,\n      isArrowDisplayed,\n      isContentFocusDisabled,\n      isHeaderDisabled,\n      isOpen,\n      onRequestClose,\n      targetRef,\n      targetAttachment,\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    if (!isOpen) {\n      return null;\n    }\n\n    let tAttachment;\n    const cAttachment = PopupUtils.parseAttachment(contentAttachment);\n    if (targetAttachment) {\n      tAttachment = PopupUtils.parseAttachment(targetAttachment);\n    } else {\n      tAttachment = PopupUtils.mirrorAttachment(cAttachment);\n    }\n\n    let cOffset;\n    const showArrow = isArrowDisplayed && contentAttachment !== 'middle center';\n    if (showArrow) {\n      cOffset = PopupUtils.getContentOffset(cAttachment, tAttachment, this.props.targetRef(), PopupArrow.Opts.arrowSize, cornerSize);\n    }\n    const hookshotContent = this.createPopupContent(boundingRef ? boundingRef() : undefined, showArrow);\n\n    return (\n      <React.Fragment>\n        <Portal isOpened={isOpen}>\n          <PopupOverlay\n            className={this.props.classNameOverlay}\n            onRequestClose={this.props.onRequestClose}\n          />\n        </Portal>\n        <Hookshot\n          attachmentBehavior={attachmentBehavior}\n          attachmentMargin={showArrow ? PopupArrow.Opts.arrowSize : 0}\n          boundingRef={boundingRef}\n          contentAttachment={cAttachment}\n          contentOffset={cOffset}\n          isEnabled={this.isContentSized}\n          isOpen={isOpen}\n          onPosition={this.handleOnPosition}\n          targetRef={targetRef}\n          targetAttachment={tAttachment}\n        >\n          {hookshotContent}\n        </Hookshot>\n      </React.Fragment>\n    );\n  }\n}\n\nPopup.propTypes = propTypes;\nPopup.defaultProps = defaultProps;\nPopup.Opts = {\n  attachmentPositions: ATTACHMENT_POSITIONS,\n  heights: PopupHeights,\n  widths: PopupWidths,\n};\n\nexport default Popup;\n"},2097:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport Button from 'terra-button';\nimport PropTypes from 'prop-types';\nimport Popup from 'terra-popup';\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\n\nconst propTypes = {\n  attachmentBehavior: PropTypes.string,\n  contentAttachment: PropTypes.string,\n  isArrowDisplayed: PropTypes.bool,\n  title: PropTypes.string,\n};\n\nconst defaultProps = {\n  attachmentBehavior: 'auto',\n  contentAttachment: 'top center',\n  isArrowDisplayed: true,\n  title: '',\n};\n\nclass PopupAttachment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.setButtonNode = this.setButtonNode.bind(this);\n    this.getButtonNode = this.getButtonNode.bind(this);\n    this.state = { open: false };\n  }\n\n  setButtonNode(node) {\n    this.parentNode = node;\n  }\n\n  getButtonNode() {\n    return this.parentNode;\n  }\n\n  handleButtonClick() {\n    this.setState({ open: true });\n  }\n\n  handleRequestClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    const {\n      attachmentBehavior,\n      contentAttachment,\n      isArrowDisplayed,\n      title,\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        <Popup\n          attachmentBehavior={attachmentBehavior}\n          contentAttachment={contentAttachment}\n          isArrowDisplayed={isArrowDisplayed}\n          isOpen={this.state.open}\n          targetRef={this.getButtonNode}\n          onRequestClose={this.handleRequestClose}\n        >\n          <Placeholder title=\"Popup Content\" />\n        </Popup>\n        <Button text={title} onClick={this.handleButtonClick} refCallback={this.setButtonNode} />\n      </React.Fragment>\n    );\n  }\n}\n\nPopupAttachment.propTypes = propTypes;\nPopupAttachment.defaultProps = defaultProps;\n\nexport default PopupAttachment;\n"},2098:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),i=o(n(1288)),s=function(){return a.default.createElement(i.default,{title:"Default Popup",isArrowDisplayed:!1})};t.default=s},2099:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(22)),i=o(n(23)),s=o(n(24)),r=o(n(25)),l=o(n(29)),u=o(n(26)),d=o(n(0)),p=o(n(54)),c=o(n(127)),h=o(n(982)),f=o(n(4)),m=o(n(1480)),g=f.default.bind(m.default),P=function(e){function t(e){var n;return(0,a.default)(this,t),(n=(0,s.default)(this,(0,r.default)(t).call(this,e))).handleButtonClick=n.handleButtonClick.bind((0,l.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,l.default)(n)),n.setParentNode=n.setParentNode.bind((0,l.default)(n)),n.getParentNode=n.getParentNode.bind((0,l.default)(n)),n.setButtonNode=n.setButtonNode.bind((0,l.default)(n)),n.getButtonNode=n.getButtonNode.bind((0,l.default)(n)),n.state={open:!1},n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"setParentNode",value:function(e){this.parentNode=e}},{key:"getParentNode",value:function(){return this.parentNode}},{key:"setButtonNode",value:function(e){this.parentNode=e}},{key:"getButtonNode",value:function(){return this.parentNode}},{key:"handleButtonClick",value:function(){this.setState({open:!0})}},{key:"handleRequestClose",value:function(){this.setState({open:!1})}},{key:"render",value:function(){return d.default.createElement("div",{className:g("content-wrapper"),ref:this.setParentNode},d.default.createElement(c.default,{boundingRef:this.getParentNode,classNameArrow:"test-arrow",classNameContent:"test-content",contentHeight:"240",contentWidth:"320",isOpen:this.state.open,onRequestClose:this.handleRequestClose,targetRef:this.getButtonNode,isContentFocusDisabled:!0},d.default.createElement(h.default,{title:"Popup Content"})),d.default.createElement(p.default,{text:"Bounded Popup",onClick:this.handleButtonClick,refCallback:this.setButtonNode}))}}]),t}(d.default.Component);t.default=P},2100:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport Button from 'terra-button';\nimport Popup from 'terra-popup';\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\nimport classNames from 'classnames/bind';\nimport styles from './PopupDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nclass PopupBounded extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.setParentNode = this.setParentNode.bind(this);\n    this.getParentNode = this.getParentNode.bind(this);\n    this.setButtonNode = this.setButtonNode.bind(this);\n    this.getButtonNode = this.getButtonNode.bind(this);\n    this.state = { open: false };\n  }\n\n  setParentNode(node) {\n    this.parentNode = node;\n  }\n\n  getParentNode() {\n    return this.parentNode;\n  }\n\n  setButtonNode(node) {\n    this.parentNode = node;\n  }\n\n  getButtonNode() {\n    return this.parentNode;\n  }\n\n  handleButtonClick() {\n    this.setState({ open: true });\n  }\n\n  handleRequestClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    return (\n      <div\n        className={cx('content-wrapper')}\n        ref={this.setParentNode}\n      >\n        <Popup\n          boundingRef={this.getParentNode}\n          classNameArrow=\"test-arrow\"\n          classNameContent=\"test-content\"\n          contentHeight=\"240\"\n          contentWidth=\"320\"\n          isOpen={this.state.open}\n          onRequestClose={this.handleRequestClose}\n          targetRef={this.getButtonNode}\n          isContentFocusDisabled\n        >\n          <Placeholder title=\"Popup Content\" />\n        </Popup>\n        <Button text=\"Bounded Popup\" onClick={this.handleButtonClick} refCallback={this.setButtonNode} />\n      </div>\n    );\n  }\n}\n\nexport default PopupBounded;\n"},2101:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(22)),i=o(n(23)),s=o(n(24)),r=o(n(25)),l=o(n(29)),u=o(n(26)),d=o(n(0)),p=o(n(54)),c=o(n(48)),h=o(n(127)),f=o(n(982)),m=o(n(4)),g=o(n(1480)),P=m.default.bind(g.default),C=function(e){var t=e.closeButtonRequired,n=e.handleRequestClose,o=d.default.createElement(f.default,{title:"Popup Content"});return t?d.default.createElement(c.default,{header:d.default.createElement(p.default,{text:"My Custom Close Button",isBlock:!0,onClick:n}),fill:!0},o):o},b=function(e){function t(e){var n;return(0,a.default)(this,t),(n=(0,s.default)(this,(0,r.default)(t).call(this,e))).handleButtonClick=n.handleButtonClick.bind((0,l.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,l.default)(n)),n.setParentNode=n.setParentNode.bind((0,l.default)(n)),n.getParentNode=n.getParentNode.bind((0,l.default)(n)),n.state={open:!1},n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"setParentNode",value:function(e){this.parentNode=e}},{key:"getParentNode",value:function(){return this.parentNode}},{key:"handleButtonClick",value:function(){this.setState({open:!0})}},{key:"handleRequestClose",value:function(){this.setState({open:!1})}},{key:"render",value:function(){return d.default.createElement("div",{className:P("content-wrapper"),ref:this.setParentNode},d.default.createElement(h.default,{boundingRef:this.getParentNode,contentHeight:"240",contentWidth:"320",isHeaderDisabled:!0,isOpen:this.state.open,onRequestClose:this.handleRequestClose,targetRef:function(){return document.getElementById("popup-no-header")},isContentFocusDisabled:!0},d.default.createElement(C,{title:"Popup Content",handleRequestClose:this.handleRequestClose})),d.default.createElement(p.default,{id:"popup-no-header",text:"No Header Popup",onClick:this.handleButtonClick}))}}]),t}(d.default.Component);t.default=b},2102:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport Button from 'terra-button';\nimport ContentContainer from 'terra-content-container';\nimport Popup from 'terra-popup';\nimport Placeholder from 'terra-doc-template/lib/Placeholder';\nimport classNames from 'classnames/bind';\nimport styles from './PopupDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\n/* eslint-disable */\nconst PopupContent = ({ closeButtonRequired, handleRequestClose}) => {\n  const placeHolder = <Placeholder title=\"Popup Content\" />;\n  if (closeButtonRequired) {\n    return (\n      <ContentContainer header={<Button text=\"My Custom Close Button\" isBlock onClick={handleRequestClose} />} fill>\n        {placeHolder}\n      </ContentContainer>\n    );\n  }\n  return placeHolder;\n};\n/* eslint-enable */\n\nclass PopupNoHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleRequestClose = this.handleRequestClose.bind(this);\n    this.setParentNode = this.setParentNode.bind(this);\n    this.getParentNode = this.getParentNode.bind(this);\n    this.state = { open: false };\n  }\n\n  setParentNode(node) {\n    this.parentNode = node;\n  }\n\n  getParentNode() {\n    return this.parentNode;\n  }\n\n  handleButtonClick() {\n    this.setState({ open: true });\n  }\n\n  handleRequestClose() {\n    this.setState({ open: false });\n  }\n\n  render() {\n    return (\n      <div\n        className={cx('content-wrapper')}\n        ref={this.setParentNode}\n      >\n        <Popup\n          boundingRef={this.getParentNode}\n          contentHeight=\"240\"\n          contentWidth=\"320\"\n          isHeaderDisabled\n          isOpen={this.state.open}\n          onRequestClose={this.handleRequestClose}\n          targetRef={() => document.getElementById('popup-no-header')}\n          isContentFocusDisabled\n        >\n          <PopupContent title=\"Popup Content\" handleRequestClose={this.handleRequestClose} />\n        </Popup>\n        <Button id=\"popup-no-header\" text=\"No Header Popup\" onClick={this.handleButtonClick} />\n      </div>\n    );\n  }\n}\n\nexport default PopupNoHeader;\n"},2103:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),i=o(n(1288)),s=function(){return a.default.createElement(i.default,{title:"Arrow Popup"})};t.default=s},2104:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(18)),i=o(n(211)),s=o(n(22)),r=o(n(24)),l=o(n(25)),u=o(n(29)),d=o(n(23)),p=o(n(26)),c=o(n(0)),h=o(n(54)),f=o(n(127)),m=o(n(982)),g=Object.keys(f.default.Opts.heights),P=Object.keys(f.default.Opts.widths),C=function(e){var t=e.contentStyle,n="Popup Content";return e.isHeightBounded&&(n+=" HeightBounded"),e.isWidthBounded&&(n+=" WidthBounded"),c.default.createElement(m.default,{title:n,style:t})},b=function(e){function t(e){var n;return(0,s.default)(this,t),(n=(0,r.default)(this,(0,l.default)(t).call(this,e))).handleButtonClick=n.handleButtonClick.bind((0,u.default)(n)),n.handleRequestClose=n.handleRequestClose.bind((0,u.default)(n)),n.handleSelectChange=n.handleSelectChange.bind((0,u.default)(n)),n.state={open:!1},n}return(0,p.default)(t,e),(0,d.default)(t,null,[{key:"generateOptions",value:function(e){return e.map((function(e,t){var n=t;return c.default.createElement("option",{key:n,value:e},e)}))}}]),(0,d.default)(t,[{key:"handleButtonClick",value:function(){this.setState({open:!0})}},{key:"handleRequestClose",value:function(){this.setState({open:!1})}},{key:"handleSelectChange",value:function(e){this.setState((0,i.default)({},e.target.name,e.target.value))}},{key:"render",value:function(){var e={};"Default"!==this.state.popupContentHeight&&(e.contentHeight=this.state.popupContentHeight),"Default"!==this.state.popupContentWidth&&(e.contentWidth=this.state.popupContentWidth);var n={};return"auto"===this.state.popupContentHeight&&(n.height="500px"),"auto"===this.state.popupContentWidth&&(n.width="500px"),c.default.createElement("div",null,c.default.createElement("label",{htmlFor:"popupContentHeight"},"Pop Content Height"),c.default.createElement("select",{id:"popupContentHeight",name:"popupContentHeight",value:this.state.popupContentHeight,onChange:this.handleSelectChange},c.default.createElement("option",{value:"Default"},"Default"),t.generateOptions(g)),c.default.createElement("br",null),c.default.createElement("br",null),c.default.createElement("label",{htmlFor:"popupContentWidth"},"Pop Content Width"),c.default.createElement("select",{id:"popupContentWidth",name:"popupContentWidth",value:this.state.popupContentWidth,onChange:this.handleSelectChange},c.default.createElement("option",{value:"Default"},"Default"),t.generateOptions(P)),c.default.createElement("br",null),c.default.createElement("br",null),c.default.createElement("div",null,c.default.createElement(f.default,(0,a.default)({},e,{classNameArrow:"test-arrow",classNameContent:"test-content",isOpen:this.state.open,onRequestClose:this.handleRequestClose,targetRef:function(){return document.getElementById("popup-dimensions")}}),c.default.createElement(C,{contentStyle:n})),c.default.createElement(h.default,{id:"popup-dimensions",text:"".concat(this.state.popupContentHeight||"Default"," x ").concat(this.state.popupContentWidth||"Default"," Popup"),onClick:this.handleButtonClick})))}}]),t}(c.default.Component);t.default=b},2105:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),i=o(n(338)),s=o(n(2106)),r=function(){return a.default.createElement(i.default,null,a.default.createElement(s.default,null))};t.default=r},2106:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(22)),i=o(n(23)),s=o(n(24)),r=o(n(25)),l=o(n(29)),u=o(n(26)),d=o(n(0)),p=o(n(54)),c=n(212),h=o(n(2107)),f=function(e){function t(e){var n;return(0,a.default)(this,t),(n=(0,s.default)(this,(0,r.default)(t).call(this,e))).disclose=n.disclose.bind((0,l.default)(n)),n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"disclose",value:function(){this.props.disclosureManager.disclose({preferredType:"modal",size:"",content:{key:"PopupModalContent",component:d.default.createElement(h.default,null)}})}},{key:"render",value:function(){return d.default.createElement(p.default,{className:"disclose",text:"Disclose Modal",onClick:this.disclose})}}]),t}(d.default.Component);f.propTypes={disclosureManager:c.disclosureManagerShape};var m=(0,c.withDisclosureManager)(f);t.default=m},2107:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(22)),i=o(n(23)),s=o(n(24)),r=o(n(25)),l=o(n(29)),u=o(n(26)),d=o(n(0)),p=o(n(54)),c=n(212),h=o(n(127)),f=o(n(982)),m=o(n(4)),g=o(n(2108)),P=m.default.bind(g.default),C=function(e){function t(e){var n;return(0,a.default)(this,t),(n=(0,s.default)(this,(0,r.default)(t).call(this,e))).handlePopupButtonClick=n.handlePopupButtonClick.bind((0,l.default)(n)),n.handlePopupRequestClose=n.handlePopupRequestClose.bind((0,l.default)(n)),n.state={open:!1},n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"handlePopupButtonClick",value:function(){this.setState({open:!0})}},{key:"handlePopupRequestClose",value:function(){this.setState({open:!1})}},{key:"render",value:function(){var e=this.props.disclosureManager;return d.default.createElement("div",{className:P("content-container")},d.default.createElement(h.default,{isArrowDisplayed:!0,isOpen:this.state.open,onRequestClose:this.handlePopupRequestClose,targetRef:function(){return document.getElementById("popup-in-modal")}},d.default.createElement(f.default,{title:"Popup Content"})),d.default.createElement(p.default,{id:"popup-in-modal",text:"Popup In Modal",onClick:this.handlePopupButtonClick}),d.default.createElement("br",null),d.default.createElement("br",null),d.default.createElement(p.default,{className:"close-disclosure",text:"Close Disclosure",onClick:e.closeDisclosure}))}}]),t}(d.default.Component);C.propTypes={disclosureManager:c.disclosureManagerShape};var b=(0,c.withDisclosureManager)(C);t.default=b},2108:function(e,t,n){e.exports={"content-container":"PopupModalContent-module__content-container___2-vz4"}},2109:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport ModalManager from 'terra-modal-manager';\nimport ModalContainer from 'terra-popup/lib/terra-dev-site/doc/example/PopupModalContainer';\n\nconst ModalManagerDemo = () => (\n  <ModalManager>\n    <ModalContainer />\n  </ModalManager>\n);\n\nexport default ModalManagerDemo;\n"},2110:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(22)),i=o(n(23)),s=o(n(24)),r=o(n(25)),l=o(n(29)),u=o(n(26)),d=o(n(0)),p=o(n(1288)),c=o(n(4)),h=o(n(2111)),f=c.default.bind(h.default),m=function(e){function t(e){var n;return(0,a.default)(this,t),(n=(0,s.default)(this,(0,r.default)(t).call(this,e))).state={behavior:"auto"},n.handleChange=n.handleChange.bind((0,l.default)(n)),n}return(0,u.default)(t,e),(0,i.default)(t,[{key:"handleChange",value:function(e){this.setState({behavior:e.target.value})}},{key:"render",value:function(){return d.default.createElement("div",null,d.default.createElement("label",{htmlFor:"popup-behavior"},"Attachment Behavior"),d.default.createElement("select",{id:"popup-behavior",onChange:this.handleChange,value:this.state.behavior,className:f("selection-list")},d.default.createElement("option",{value:"auto"},"Auto"),d.default.createElement("option",{value:"flip"},"Flip"),d.default.createElement("option",{value:"push"},"Push")),d.default.createElement(p.default,{title:"Open Popup",attachmentBehavior:this.state.behavior}))}}]),t}(d.default.Component);t.default=m},2111:function(e,t,n){e.exports={"selection-list":"PopupAttachmentBehavior-module__selection-list___3N08p"}},2112:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),i=o(n(1288));n(2113);var s=function(){return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:"row"},a.default.createElement(i.default,{contentAttachment:"bottom left",title:"Bottom-Left"}),a.default.createElement(i.default,{contentAttachment:"bottom center",title:"Bottom-Center"}),a.default.createElement(i.default,{contentAttachment:"bottom right",title:"Bottom-Right"})),a.default.createElement("div",{className:"row"},a.default.createElement(i.default,{contentAttachment:"middle left",title:"Middle-Left"}),a.default.createElement(i.default,{contentAttachment:"middle center",title:"Middle-Center"}),a.default.createElement(i.default,{contentAttachment:"middle right",title:"Middle-Right"})),a.default.createElement("div",{className:"row"},a.default.createElement(i.default,{contentAttachment:"top left",title:"Top-Left"}),a.default.createElement(i.default,{contentAttachment:"top center",title:"Top-Center"}),a.default.createElement(i.default,{contentAttachment:"top right",title:"Top-Right"})))};t.default=s},2113:function(e,t,n){},2321:function(e,t,n){"use strict";var o=n(5);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=o(n(0)),i=o(n(961)),s=n(1370),r=o(n(2095)),l=o(n(2096)),u=o(n(2097)),d=o(n(2098)),p=o(n(2099)),c=o(n(2100)),h=o(n(2101)),f=o(n(2102)),m=o(n(2103)),g=o(n(2104)),P=o(n(2105)),C=o(n(2109)),b=o(n(2110)),v=o(n(2112)),N=function(){return a.default.createElement(i.default,{packageName:s.name,readme:r.default,srcPath:"https://github.com/cerner/terra-framework/tree/master/packages/".concat(s.name),examples:[{title:"Popup Standard Implementation",example:a.default.createElement(d.default,null),source:u.default},{title:"Popup Display With Arrow",example:a.default.createElement(m.default,null)},{title:"Popup Attachment Behavior",example:a.default.createElement(b.default,null)},{title:"Popup Attachments",example:a.default.createElement(v.default,null)},{title:"Popup Size Variants",example:a.default.createElement(g.default,null)},{title:"Popup Bounded",example:a.default.createElement(p.default,null),source:c.default},{title:"Popup Bounded With No Header",example:a.default.createElement(h.default,null),source:f.default},{title:"Popup Inside Modal",example:a.default.createElement(P.default,null),source:C.default}],propsTables:[{componentSrc:l.default}]})};t.default=N},962:function(e,t){},982:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=r(n(0)),a=r(n(2)),i=r(n(4)),s=r(n(1003));function r(e){return e&&e.__esModule?e:{default:e}}function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=i.default.bind(s.default),p={variant:a.default.oneOf(["light","dark"]),title:a.default.string},c=function(e){var t=e.variant,n=e.title,a=u(e,["variant","title"]),i=d(["placeholder",a.className]),s=d(["inner","is-".concat(t)]);return o.default.createElement("div",l({},a,{className:i}),o.default.createElement("div",{className:s},o.default.createElement("h2",null,n)))};c.propTypes=p,c.defaultProps={variant:"dark",title:""};var h=c;t.default=h}}]);
//# sourceMappingURL=73-e95ea91cd0ce38bd9d7b.js.map